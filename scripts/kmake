#!/bin/bash

# setup variables
save_dir="$PWD"
proj_dir=/store/code/projects
base=kernel
kern_src=linux
broot_src=buildroot
kern_build=obj/linux-x86
broot_build=obj/buildroot-x86
build_type=''
append_args=('')
make_cmd=(make)
sparse_flag=''

# cleanup traps
function cleanup() {
	local lines
	lines="$(wc -l ../sparse.log.tmp 2>/dev/null | cut -f-1 -d' ')"
	if [[ -z "$lines" ]]; then
		lines=0
	fi
	if ((lines > 5)); then
		cat ../sparse.log.tmp >>../sparse.log
	fi
	rm -f ../sparse.log.tmp
	cd "$save_dir" || exit 2
	trap - INT ERR EXIT
}
trap 'cleanup; kill -INT $$;' INT
trap 'cleanup' ERR EXIT

while getopts :bdchks opt; do
	case "$opt" in
	(b)
		[[ -z "$build_type" ]] && build_type=b
		;;
	(c)
		[[ "${append_args[*]}" != *nconfig* ]] && append_args+=(nconfig)
		;;
	(d)
		make_cmd=(echo make)
		;;
	(k)
		[[ -z "$build_type" ]] && build_type=k
		;;
	(s)
		sparse_flag=1
		;;
	(h)
		printf 'usage: %s: [-bcdkh] [<make args>]\n' "${0##*/}"
		exit
		;;
	(:|?)
		printf 'illegal option: -%s\n' "$OPTARG"
		printf 'usage: %s: [-bcdkh] [<make args>]\n' "${0##*/}"
		exit 2
		;;
	esac
done
shift "$((OPTIND - 1))"

# build command-line
append_args=("$@")
case "$build_type" in
b)

	src_dir="$proj_dir/$base/$broot_src"
	out_dir="../$broot_build"
	;;
*)
	src_dir="$proj_dir/$base/$kern_src"
	out_dir="../$kern_build"
	[[ -n "$sparse_flag" ]] && append_args+=('C=1')
	;;
esac

# change directories and print final command
cd "$src_dir" || exit 1
printf 'executing: [%s %s %s]\n' \
	"$(tput sgr0)$(tput setaf 11)${make_cmd[*]}$(tput sgr0)" \
	"$(tput sgr0)$(tput setaf 9)O=$out_dir$(tput sgr0)" \
	"$(tput sgr0)$(tput setaf 10)${append_args[*]}$(tput sgr0)"
printf 'buid directory: [%s]\n' \
	"$(tput sgr0)$(tput setaf 13)$src_dir$(tput sgr0)"
printf 'output directory: [%s]\n' \
	"$(tput sgr0)$(tput setaf 13)$(realpath -e "$out_dir" 2>/dev/null || echo '(error)')$(tput sgr0)"

# start build
if [[ -z "$sparse_flag" || "${make_cmd[1]}" == echo ]]; then
	"${make_cmd[@]}" O="$out_dir" "${append_args[@]}"
else
	perl -e 'print "\n", "—"x72, "\nCompilation started at: ". `date`, "—"x72, "\n\n"' >>../sparse.log.tmp
	"${make_cmd[@]}" O="$out_dir" "${append_args[@]}" 2>&1 >/dev/null | tee -a ../sparse.log.tmp
fi

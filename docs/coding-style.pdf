%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 5 0 R /F5 6 0 R /F6 11 0 R 
  /F7 15 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/BaseFont /Courier-Bold /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
6 0 obj
<<
/BaseFont /Courier-Oblique /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font
>>
endobj
7 0 obj
<<
/Contents 54 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
8 0 obj
<<
/Contents 55 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
9 0 obj
<<
/Contents 56 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
10 0 obj
<<
/Contents 57 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
11 0 obj
<<
/BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F6 /Subtype /Type1 /Type /Font
>>
endobj
12 0 obj
<<
/Contents 58 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
13 0 obj
<<
/Contents 59 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
14 0 obj
<<
/Contents 60 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
15 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F7 /Subtype /Type1 /Type /Font
>>
endobj
16 0 obj
<<
/Contents 61 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
17 0 obj
<<
/Contents 62 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
18 0 obj
<<
/Contents 63 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
19 0 obj
<<
/Contents 64 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
20 0 obj
<<
/Contents 65 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
21 0 obj
<<
/Contents 66 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
22 0 obj
<<
/Contents 67 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
23 0 obj
<<
/A <<
/S /URI /Type /Action /URI (http://www.gnu.org/manual/)
>> /Border [ 0 0 0 ] /Rect [ 127.7129 560.8236 249.4329 572.8236 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/A <<
/S /URI /Type /Action /URI (http://www.open-std.org/JTC1/SC22/WG14/)
>> /Border [ 0 0 0 ] /Rect [ 62.69291 530.8236 256.6529 542.8236 ] /Subtype /Link /Type /Annot
>>
endobj
25 0 obj
<<
/A <<
/S /URI /Type /Action /URI (mailto:greg@kroah.com)
>> /Border [ 0 0 0 ] /Rect [ 306.1678 512.8236 383.0078 524.8236 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/A <<
/S /URI /Type /Action /URI (http://www.kroah.com/linux/talks/ols_2002_kernel_codingstyle_talk/html/)
>> /Border [ 0 0 0 ] /Rect [ 62.69291 500.8236 382.8129 512.8236 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/Annots [ 23 0 R 24 0 R 25 0 R 26 0 R ] /Contents 68 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 53 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
28 0 obj
<<
/Outlines 30 0 R /PageLabels 69 0 R /PageMode /UseNone /Pages 53 0 R /Type /Catalog
>>
endobj
29 0 obj
<<
/Author () /CreationDate (D:20171019182132+10'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20171019182132+10'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title (Linux kernel coding style) /Trapped /False
>>
endobj
30 0 obj
<<
/Count 23 /First 31 0 R /Last 52 0 R /Type /Outlines
>>
endobj
31 0 obj
<<
/Dest [ 7 0 R /XYZ 62.69291 635.0236 0 ] /Next 32 0 R /Parent 30 0 R /Title (1\) Indentation)
>>
endobj
32 0 obj
<<
/Dest [ 8 0 R /XYZ 62.69291 741.0236 0 ] /Next 33 0 R /Parent 30 0 R /Prev 31 0 R /Title (2\) Breaking long lines and strings)
>>
endobj
33 0 obj
<<
/Count 1 /Dest [ 8 0 R /XYZ 62.69291 606.0236 0 ] /First 34 0 R /Last 34 0 R /Next 35 0 R /Parent 30 0 R 
  /Prev 32 0 R /Title (3\) Placing Braces and Spaces)
>>
endobj
34 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 296.2236 0 ] /Parent 33 0 R /Title (3.1\) Spaces)
>>
endobj
35 0 obj
<<
/Dest [ 10 0 R /XYZ 62.69291 309.8236 0 ] /Next 36 0 R /Parent 30 0 R /Prev 33 0 R /Title (4\) Naming)
>>
endobj
36 0 obj
<<
/Dest [ 12 0 R /XYZ 62.69291 729.0236 0 ] /Next 37 0 R /Parent 30 0 R /Prev 35 0 R /Title (5\) Typedefs)
>>
endobj
37 0 obj
<<
/Dest [ 13 0 R /XYZ 62.69291 609.0236 0 ] /Next 38 0 R /Parent 30 0 R /Prev 36 0 R /Title (6\) Functions)
>>
endobj
38 0 obj
<<
/Dest [ 13 0 R /XYZ 62.69291 240.8236 0 ] /Next 39 0 R /Parent 30 0 R /Prev 37 0 R /Title (7\) Centralized exiting of functions)
>>
endobj
39 0 obj
<<
/Dest [ 14 0 R /XYZ 62.69291 191.4236 0 ] /Next 40 0 R /Parent 30 0 R /Prev 38 0 R /Title (8\) Commenting)
>>
endobj
40 0 obj
<<
/Dest [ 16 0 R /XYZ 62.69291 406.6236 0 ] /Next 41 0 R /Parent 30 0 R /Prev 39 0 R /Title (9\) You've made a mess of it)
>>
endobj
41 0 obj
<<
/Dest [ 17 0 R /XYZ 62.69291 449.8236 0 ] /Next 42 0 R /Parent 30 0 R /Prev 40 0 R /Title (10\) Kconfig configuration files)
>>
endobj
42 0 obj
<<
/Dest [ 18 0 R /XYZ 62.69291 765.0236 0 ] /Next 43 0 R /Parent 30 0 R /Prev 41 0 R /Title (11\) Data structures)
>>
endobj
43 0 obj
<<
/Dest [ 18 0 R /XYZ 62.69291 480.0236 0 ] /Next 44 0 R /Parent 30 0 R /Prev 42 0 R /Title (12\) Macros, Enums and RTL)
>>
endobj
44 0 obj
<<
/Dest [ 19 0 R /XYZ 62.69291 341.4236 0 ] /Next 45 0 R /Parent 30 0 R /Prev 43 0 R /Title (13\) Printing kernel messages)
>>
endobj
45 0 obj
<<
/Dest [ 20 0 R /XYZ 62.69291 717.0236 0 ] /Next 46 0 R /Parent 30 0 R /Prev 44 0 R /Title (14\) Allocating memory)
>>
endobj
46 0 obj
<<
/Dest [ 20 0 R /XYZ 62.69291 392.4236 0 ] /Next 47 0 R /Parent 30 0 R /Prev 45 0 R /Title (15\) The inline disease)
>>
endobj
47 0 obj
<<
/Dest [ 20 0 R /XYZ 62.69291 161.4236 0 ] /Next 48 0 R /Parent 30 0 R /Prev 46 0 R /Title (16\) Function return values and names)
>>
endobj
48 0 obj
<<
/Dest [ 21 0 R /XYZ 62.69291 531.8236 0 ] /Next 49 0 R /Parent 30 0 R /Prev 47 0 R /Title (17\) Don't re-invent the kernel macros)
>>
endobj
49 0 obj
<<
/Dest [ 21 0 R /XYZ 62.69291 326.4236 0 ] /Next 50 0 R /Parent 30 0 R /Prev 48 0 R /Title (18\) Editor modelines and other cruft)
>>
endobj
50 0 obj
<<
/Dest [ 22 0 R /XYZ 62.69291 705.0236 0 ] /Next 51 0 R /Parent 30 0 R /Prev 49 0 R /Title (19\) Inline assembly)
>>
endobj
51 0 obj
<<
/Dest [ 22 0 R /XYZ 62.69291 428.8236 0 ] /Next 52 0 R /Parent 30 0 R /Prev 50 0 R /Title (20\) Conditional Compilation)
>>
endobj
52 0 obj
<<
/Dest [ 27 0 R /XYZ 62.69291 671.8236 0 ] /Parent 30 0 R /Prev 51 0 R /Title (Appendix I\) References)
>>
endobj
53 0 obj
<<
/Count 15 /Kids [ 7 0 R 8 0 R 9 0 R 10 0 R 12 0 R 13 0 R 14 0 R 16 0 R 17 0 R 18 0 R 
  19 0 R 20 0 R 21 0 R 22 0 R 27 0 R ] /Type /Pages
>>
endobj
54 0 obj
<<
/Length 9066
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 114.9049 0 Td (Linux kernel coding style) Tj T* -114.9049 0 Td ET
Q
Q
q
1 0 0 1 62.69291 695.0236 cm
q
BT 1 0 0 1 0 26 Tm 1.192339 Tw 12 TL /F1 10 Tf 0 0 0 rg (This is a short document describing the preferred coding style for the linux kernel. Coding style is very) Tj T* 0 Tw .236179 Tw (personal, and I won't ) Tj /F2 10 Tf (force) Tj /F1 10 Tf ( my views on anybody, but this is what goes for anything that I have to be able) Tj T* 0 Tw (to maintain, and I'd prefer it for most other things too. Please at least consider the points made here.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 665.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .625988 Tw (First off, I'd suggest printing out a copy of the GNU coding standards, and NOT read it. Burn them, it's a) Tj T* 0 Tw (great symbolic gesture.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 647.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Anyway, here goes:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 614.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (1\) Indentation) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 572.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .39686 Tw (Tabs are 8 characters, and thus indentations are also 8 characters. There are heretic movements that try) Tj T* 0 Tw .511894 Tw (to make indentations 4 \(or even 2!\) characters deep, and that is akin to trying to define the value of PI to) Tj T* 0 Tw (be 3.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 530.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .274104 Tw (Rationale: The whole idea behind indentation is to clearly define where a block of control starts and ends.) Tj T* 0 Tw .688409 Tw (Especially when you've been looking at your screen for 20 straight hours, you'll find it a lot easier to see) Tj T* 0 Tw (how the indentation works if you have large indentations.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 488.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.43936 Tw (Now, some people will claim that having 8-character indentations makes the code move too far to the) Tj T* 0 Tw .483488 Tw (right, and makes it hard to read on a 80-character terminal screen. The answer to that is that if you need) Tj T* 0 Tw (more than 3 levels of indentation, you're screwed anyway, and should fix your program.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 458.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.51528 Tw (In short, 8-char indents make things easier to read, and have the added benefit of warning you when) Tj T* 0 Tw (you're nesting your functions too deep. Heed that warning.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 428.0236 cm
q
BT 1 0 0 1 0 14 Tm .390542 Tw 12 TL /F1 10 Tf 0 0 0 rg (The preferred way to ease multiple indentation levels in a switch statement is to align the ) Tj /F3 10 Tf 0 0 0 rg (switch) Tj /F1 10 Tf 0 0 0 rg ( and its) Tj T* 0 Tw (subordinate ) Tj /F3 10 Tf 0 0 0 rg (case) Tj /F1 10 Tf 0 0 0 rg ( labels in the same column instead of ) Tj /F3 10 Tf 0 0 0 rg (double-indenting) Tj /F1 10 Tf 0 0 0 rg ( the ) Tj /F3 10 Tf 0 0 0 rg (case) Tj /F1 10 Tf 0 0 0 rg ( labels. E.g.:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 214.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 204 re B*
Q
q
.960784 .960784 .862745 rg
n 0 180 36 12 re f*
.960784 .960784 .862745 rg
n 42 180 6 12 re f*
.960784 .960784 .862745 rg
n 48 180 36 12 re f*
.960784 .960784 .862745 rg
n 84 180 6 12 re f*
.960784 .960784 .862745 rg
n 96 180 6 12 re f*
.960784 .960784 .862745 rg
n 0 168 24 12 re f*
.960784 .960784 .862745 rg
n 30 168 18 12 re f*
.960784 .960784 .862745 rg
n 48 168 6 12 re f*
.960784 .960784 .862745 rg
n 0 156 24 12 re f*
.960784 .960784 .862745 rg
n 30 156 18 12 re f*
.960784 .960784 .862745 rg
n 48 156 6 12 re f*
.960784 .960784 .862745 rg
n 48 144 18 12 re f*
.960784 .960784 .862745 rg
n 72 144 6 12 re f*
.960784 .960784 .862745 rg
n 78 144 6 12 re f*
.960784 .960784 .862745 rg
n 84 144 6 12 re f*
.960784 .960784 .862745 rg
n 96 144 12 12 re f*
.960784 .960784 .862745 rg
n 108 144 6 12 re f*
.960784 .960784 .862745 rg
n 48 132 30 12 re f*
.960784 .960784 .862745 rg
n 78 132 6 12 re f*
.960784 .960784 .862745 rg
n 0 120 24 12 re f*
.960784 .960784 .862745 rg
n 30 120 18 12 re f*
.960784 .960784 .862745 rg
n 48 120 6 12 re f*
.960784 .960784 .862745 rg
n 0 108 24 12 re f*
.960784 .960784 .862745 rg
n 30 108 18 12 re f*
.960784 .960784 .862745 rg
n 48 108 6 12 re f*
.960784 .960784 .862745 rg
n 48 96 18 12 re f*
.960784 .960784 .862745 rg
n 72 96 6 12 re f*
.960784 .960784 .862745 rg
n 78 96 6 12 re f*
.960784 .960784 .862745 rg
n 84 96 6 12 re f*
.960784 .960784 .862745 rg
n 96 96 12 12 re f*
.960784 .960784 .862745 rg
n 108 96 6 12 re f*
.960784 .960784 .862745 rg
n 48 84 30 12 re f*
.960784 .960784 .862745 rg
n 78 84 6 12 re f*
.960784 .960784 .862745 rg
n 0 72 24 12 re f*
.960784 .960784 .862745 rg
n 30 72 18 12 re f*
.960784 .960784 .862745 rg
n 48 72 6 12 re f*
.960784 .960784 .862745 rg
n 0 60 24 12 re f*
.960784 .960784 .862745 rg
n 30 60 18 12 re f*
.960784 .960784 .862745 rg
n 48 60 6 12 re f*
.960784 .960784 .862745 rg
n 48 48 18 12 re f*
.960784 .960784 .862745 rg
n 72 48 6 12 re f*
.960784 .960784 .862745 rg
n 78 48 6 12 re f*
.960784 .960784 .862745 rg
n 84 48 6 12 re f*
.960784 .960784 .862745 rg
n 96 48 12 12 re f*
.960784 .960784 .862745 rg
n 108 48 6 12 re f*
.960784 .960784 .862745 rg
n 48 36 108 12 re f*
.960784 .960784 .862745 rg
n 0 24 42 12 re f*
.960784 .960784 .862745 rg
n 42 24 6 12 re f*
.960784 .960784 .862745 rg
n 48 12 30 12 re f*
.960784 .960784 .862745 rg
n 78 12 6 12 re f*
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
BT 1 0 0 1 0 182 Tm 12 TL /F4 10 Tf 0 .501961 0 rg (switch) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (suffix) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* /F4 10 Tf 0 .501961 0 rg (case) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('G') Tj .4 .4 .4 rg (:) Tj 0 0 0 rg  T* /F4 10 Tf 0 .501961 0 rg (case) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('g') Tj .4 .4 .4 rg (:) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (mem) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (<) Tj (<) Tj (=) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (30) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (break) Tj /F3 10 Tf 0 0 0 rg (;) Tj 0 0 0 rg  T* /F4 10 Tf 0 .501961 0 rg (case) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('M') Tj .4 .4 .4 rg (:) Tj 0 0 0 rg  T* /F4 10 Tf 0 .501961 0 rg (case) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('m') Tj .4 .4 .4 rg (:) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (mem) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (<) Tj (<) Tj (=) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (20) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (break) Tj /F3 10 Tf 0 0 0 rg (;) Tj 0 0 0 rg  T* /F4 10 Tf 0 .501961 0 rg (case) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('K') Tj .4 .4 .4 rg (:) Tj 0 0 0 rg  T* /F4 10 Tf 0 .501961 0 rg (case) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('k') Tj .4 .4 .4 rg (:) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (mem) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (<) Tj (<) Tj (=) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (10) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* (        ) Tj /F5 10 Tf .25098 .501961 .501961 rg (/* fall through */) Tj /F3 10 Tf 0 0 0 rg  T* /F4 10 Tf 0 .501961 0 rg (default) Tj /F3 10 Tf .4 .4 .4 rg (:) Tj 0 0 0 rg  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (break) Tj /F3 10 Tf 0 0 0 rg (;) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 194.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Don't put multiple statements on a single line unless you have something to hide:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 149.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
.960784 .960784 .862745 rg
n 0 12 12 12 re f*
.960784 .960784 .862745 rg
n 18 12 6 12 re f*
.960784 .960784 .862745 rg
n 24 12 54 12 re f*
.960784 .960784 .862745 rg
n 78 12 6 12 re f*
.960784 .960784 .862745 rg
n 90 12 42 12 re f*
.960784 .960784 .862745 rg
n 132 12 6 12 re f*
.960784 .960784 .862745 rg
n 12 0 132 12 re f*
.960784 .960784 .862745 rg
n 144 0 6 12 re f*
BT 1 0 0 1 0 14 Tm 12 TL /F4 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (condition) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (do_this) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* (  ) Tj 0 0 0 rg (do_something_everytime) Tj 0 0 0 rg (;) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 117.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.28686 Tw (Don't put multiple assignments on a single line either. Kernel coding style is super simple. Avoid tricky) Tj T* 0 Tw (expressions.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 87.62362 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .768555 Tw (Outside of comments, documentation and except in Kconfig, spaces are never used for indentation, and) Tj T* 0 Tw (the above example is deliberately broken.) Tj T* ET
Q
Q
 
endstream
endobj
55 0 obj
<<
/Length 9396
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 753.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Get a decent editor and don't leave whitespace at the end of lines.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 720.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (2\) Breaking long lines and strings) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 702.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Coding style is all about readability and maintainability using commonly available tools.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 684.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The limit on the length of lines is 80 columns and this is a strongly preferred limit.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 618.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL 1.366412 Tw (Statements longer than 80 columns will be broken into sensible chunks, unless exceeding 80 columns) Tj T* 0 Tw 1.589069 Tw (significantly increases readability and does not hide information. Descendants are always substantially) Tj T* 0 Tw 1.22811 Tw (shorter than the parent and are placed substantially to the right. The same applies to function headers) Tj T* 0 Tw 1.210697 Tw (with a long argument list. However, never break user-visible strings such as printk messages, because) Tj T* 0 Tw (that breaks the ability to grep for them.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 585.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (3\) Placing Braces and Spaces) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 531.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .100514 Tw (The other issue that always comes up in C styling is the placement of braces. Unlike the indent size, there) Tj T* 0 Tw 1.437485 Tw (are few technical reasons to choose one placement strategy over the other, but the preferred way, as) Tj T* 0 Tw .703488 Tw (shown to us by the prophets Kernighan and Ritchie, is to put the opening brace last on the line, and put) Tj T* 0 Tw (the closing brace first, thusly:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 473.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
.960784 .960784 .862745 rg
n 0 24 12 12 re f*
.960784 .960784 .862745 rg
n 18 24 6 12 re f*
.960784 .960784 .862745 rg
n 24 24 6 12 re f*
.960784 .960784 .862745 rg
n 36 24 12 12 re f*
.960784 .960784 .862745 rg
n 54 24 24 12 re f*
.960784 .960784 .862745 rg
n 78 24 6 12 re f*
.960784 .960784 .862745 rg
n 90 24 6 12 re f*
.960784 .960784 .862745 rg
n 48 12 12 12 re f*
.960784 .960784 .862745 rg
n 66 12 12 12 re f*
.960784 .960784 .862745 rg
n 84 12 6 12 re f*
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
BT 1 0 0 1 0 26 Tm 12 TL /F4 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (x) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (is) Tj 0 0 0 rg ( ) Tj 0 .501961 0 rg (true) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (we) Tj 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (do) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (y) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 453.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This applies to all non-function statement blocks \(if, switch, for, while, do\). E.g.:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 312.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 132 re B*
Q
q
.960784 .960784 .862745 rg
n 0 108 36 12 re f*
.960784 .960784 .862745 rg
n 42 108 6 12 re f*
.960784 .960784 .862745 rg
n 48 108 36 12 re f*
.960784 .960784 .862745 rg
n 84 108 6 12 re f*
.960784 .960784 .862745 rg
n 96 108 6 12 re f*
.960784 .960784 .862745 rg
n 0 96 24 12 re f*
.960784 .960784 .862745 rg
n 30 96 48 12 re f*
.960784 .960784 .862745 rg
n 78 96 6 12 re f*
.960784 .960784 .862745 rg
n 48 84 36 12 re f*
.960784 .960784 .862745 rg
n 90 84 30 12 re f*
.960784 .960784 .862745 rg
n 120 84 6 12 re f*
.960784 .960784 .862745 rg
n 0 72 24 12 re f*
.960784 .960784 .862745 rg
n 30 72 66 12 re f*
.960784 .960784 .862745 rg
n 96 72 6 12 re f*
.960784 .960784 .862745 rg
n 48 60 36 12 re f*
.960784 .960784 .862745 rg
n 90 60 48 12 re f*
.960784 .960784 .862745 rg
n 138 60 6 12 re f*
.960784 .960784 .862745 rg
n 0 48 24 12 re f*
.960784 .960784 .862745 rg
n 30 48 66 12 re f*
.960784 .960784 .862745 rg
n 96 48 6 12 re f*
.960784 .960784 .862745 rg
n 48 36 36 12 re f*
.960784 .960784 .862745 rg
n 90 36 48 12 re f*
.960784 .960784 .862745 rg
n 138 36 6 12 re f*
.960784 .960784 .862745 rg
n 0 24 42 12 re f*
.960784 .960784 .862745 rg
n 42 24 6 12 re f*
.960784 .960784 .862745 rg
n 48 12 36 12 re f*
.960784 .960784 .862745 rg
n 90 12 24 12 re f*
.960784 .960784 .862745 rg
n 114 12 6 12 re f*
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
BT 1 0 0 1 0 110 Tm 12 TL /F4 10 Tf 0 .501961 0 rg (switch) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (action) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* /F4 10 Tf 0 .501961 0 rg (case) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .627451 .627451 0 rg (KOBJ_ADD) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("add") Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* /F4 10 Tf 0 .501961 0 rg (case) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .627451 .627451 0 rg (KOBJ_REMOVE) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("remove") Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* /F4 10 Tf 0 .501961 0 rg (case) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .627451 .627451 0 rg (KOBJ_CHANGE) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("change") Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* /F4 10 Tf 0 .501961 0 rg (default) Tj /F3 10 Tf .4 .4 .4 rg (:) Tj 0 0 0 rg  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 .501961 0 rg (NULL) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 280.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .044104 Tw (However, there is one special case, namely functions: they have the opening brace at the beginning of the) Tj T* 0 Tw (next line, thus:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 211.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
.960784 .960784 .862745 rg
n 0 36 18 12 re f*
.960784 .960784 .862745 rg
n 24 36 48 12 re f*
.960784 .960784 .862745 rg
n 72 36 6 12 re f*
.960784 .960784 .862745 rg
n 78 36 18 12 re f*
.960784 .960784 .862745 rg
n 102 36 6 12 re f*
.960784 .960784 .862745 rg
n 108 36 6 12 re f*
.960784 .960784 .862745 rg
n 0 24 6 12 re f*
.960784 .960784 .862745 rg
n 48 12 24 12 re f*
.960784 .960784 .862745 rg
n 78 12 12 12 re f*
.960784 .960784 .862745 rg
n 96 12 48 12 re f*
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
BT 1 0 0 1 0 38 Tm 12 TL /F3 10 Tf .690196 0 .25098 rg (int) Tj 0 0 0 rg ( ) Tj 0 0 1 rg (function) Tj 0 0 0 rg (\() Tj .690196 0 .25098 rg (int) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (x) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* 0 0 0 rg ({) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (body) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (of) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (function) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 167.4236 cm
q
BT 1 0 0 1 0 26 Tm 1.453516 Tw 12 TL /F1 10 Tf 0 0 0 rg (Heretic people all over the world have claimed that this inconsistency is ... well ... inconsistent, but all) Tj T* 0 Tw 1.162485 Tw (right-thinking people know that \(a\) K) Tj (&) Tj (R are ) Tj /F2 10 Tf (right) Tj /F1 10 Tf ( and \(b\) K) Tj (&) Tj (R are right. Besides, functions are special) Tj T* 0 Tw (anyway \(you can't nest them in C\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 137.4236 cm
q
BT 1 0 0 1 0 14 Tm 1.046353 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that the closing brace is empty on a line of its own, ) Tj /F2 10 Tf (except) Tj /F1 10 Tf ( in the cases where it is followed by a) Tj T* 0 Tw (continuation of the same statement, ie a ) Tj /F3 10 Tf 0 0 0 rg (while) Tj /F1 10 Tf 0 0 0 rg ( in a do-statement or an ) Tj /F3 10 Tf 0 0 0 rg (else) Tj /F1 10 Tf 0 0 0 rg ( in an if-statement, like this:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 80.22362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
.960784 .960784 .862745 rg
n 0 24 12 12 re f*
.960784 .960784 .862745 rg
n 18 24 6 12 re f*
.960784 .960784 .862745 rg
n 48 12 24 12 re f*
.960784 .960784 .862745 rg
n 78 12 12 12 re f*
.960784 .960784 .862745 rg
n 96 12 12 12 re f*
.960784 .960784 .862745 rg
n 108 12 6 12 re f*
.960784 .960784 .862745 rg
n 114 12 24 12 re f*
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
.960784 .960784 .862745 rg
n 12 0 30 12 re f*
.960784 .960784 .862745 rg
n 48 0 6 12 re f*
.960784 .960784 .862745 rg
n 54 0 54 12 re f*
.960784 .960784 .862745 rg
n 108 0 12 12 re f*
BT 1 0 0 1 0 26 Tm 12 TL /F4 10 Tf 0 .501961 0 rg (do) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (body) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (of) Tj 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (do) Tj /F3 10 Tf .4 .4 .4 rg (-) Tj 0 0 0 rg (loop) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (while) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (condition) Tj 0 0 0 rg (\);) Tj T* ET
Q
Q
Q
Q
Q
 
endstream
endobj
56 0 obj
<<
/Length 7966
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 753.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 647.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 96 re B*
Q
q
.960784 .960784 .862745 rg
n 0 72 12 12 re f*
.960784 .960784 .862745 rg
n 18 72 6 12 re f*
.960784 .960784 .862745 rg
n 24 72 6 12 re f*
.960784 .960784 .862745 rg
n 36 72 12 12 re f*
.960784 .960784 .862745 rg
n 54 72 6 12 re f*
.960784 .960784 .862745 rg
n 60 72 6 12 re f*
.960784 .960784 .862745 rg
n 72 72 6 12 re f*
.960784 .960784 .862745 rg
n 48 60 12 12 re f*
.960784 .960784 .862745 rg
n 0 48 6 12 re f*
.960784 .960784 .862745 rg
n 12 48 24 12 re f*
.960784 .960784 .862745 rg
n 42 48 12 12 re f*
.960784 .960784 .862745 rg
n 60 48 6 12 re f*
.960784 .960784 .862745 rg
n 66 48 6 12 re f*
.960784 .960784 .862745 rg
n 78 48 6 12 re f*
.960784 .960784 .862745 rg
n 90 48 6 12 re f*
.960784 .960784 .862745 rg
n 96 48 6 12 re f*
.960784 .960784 .862745 rg
n 108 48 6 12 re f*
.960784 .960784 .862745 rg
n 48 36 18 12 re f*
.960784 .960784 .862745 rg
n 0 24 6 12 re f*
.960784 .960784 .862745 rg
n 12 24 24 12 re f*
.960784 .960784 .862745 rg
n 42 24 6 12 re f*
.960784 .960784 .862745 rg
n 48 12 24 12 re f*
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
BT 1 0 0 1 0 74 Tm 12 TL /F4 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (x) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (==) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (y) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (..) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (else) Tj /F3 10 Tf 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (x) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (>) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (y) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (...) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (else) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (....) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 627.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Rationale: K) Tj (&) Tj (R.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 585.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .425984 Tw (Also, note that this brace-placement also minimizes the number of empty \(or almost empty\) lines, without) Tj T* 0 Tw .198876 Tw (any loss of readability. Thus, as the supply of new-lines on your screen is not a renewable resource \(think) Tj T* 0 Tw (25-line terminal screens here\), you have more empty lines to put comments on.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 567.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Do not unnecessarily use braces where a single statement will do.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 522.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
.960784 .960784 .862745 rg
n 0 12 12 12 re f*
.960784 .960784 .862745 rg
n 18 12 6 12 re f*
.960784 .960784 .862745 rg
n 24 12 54 12 re f*
.960784 .960784 .862745 rg
n 78 12 6 12 re f*
.960784 .960784 .862745 rg
n 48 0 36 12 re f*
.960784 .960784 .862745 rg
n 84 0 18 12 re f*
BT 1 0 0 1 0 14 Tm 12 TL /F4 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (condition) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (action) Tj 0 0 0 rg (\(\);) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 502.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 433.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F3 10 Tf 12 TL (if \(condition\)) Tj T* (        do_this\(\);) Tj T* (else) Tj T* (        do_that\(\);) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 401.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .625251 Tw (This does not apply if only one branch of a conditional statement is a single statement; in the latter case) Tj T* 0 Tw (use braces in both branches:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 308.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
.960784 .960784 .862745 rg
n 0 60 12 12 re f*
.960784 .960784 .862745 rg
n 18 60 6 12 re f*
.960784 .960784 .862745 rg
n 24 60 54 12 re f*
.960784 .960784 .862745 rg
n 78 60 6 12 re f*
.960784 .960784 .862745 rg
n 90 60 6 12 re f*
.960784 .960784 .862745 rg
n 48 48 42 12 re f*
.960784 .960784 .862745 rg
n 90 48 18 12 re f*
.960784 .960784 .862745 rg
n 48 36 42 12 re f*
.960784 .960784 .862745 rg
n 90 36 18 12 re f*
.960784 .960784 .862745 rg
n 0 24 6 12 re f*
.960784 .960784 .862745 rg
n 12 24 24 12 re f*
.960784 .960784 .862745 rg
n 42 24 6 12 re f*
.960784 .960784 .862745 rg
n 48 12 54 12 re f*
.960784 .960784 .862745 rg
n 102 12 18 12 re f*
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
BT 1 0 0 1 0 62 Tm 12 TL /F4 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (condition) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (do_this) Tj 0 0 0 rg (\(\);) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (do_that) Tj 0 0 0 rg (\(\);) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (else) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (otherwise) Tj 0 0 0 rg (\(\);) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 278.2236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (3.1\) Spaces) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 224.2236 cm
q
BT 1 0 0 1 0 38 Tm 1.288555 Tw 12 TL /F1 10 Tf 0 0 0 rg (Linux kernel style for use of spaces depends \(mostly\) on function-versus-keyword usage. Use a space) Tj T* 0 Tw 1.17152 Tw (after \(most\) keywords. The notable exceptions are sizeof, typeof, alignof, and __attribute__, which look) Tj T* 0 Tw .013735 Tw (somewhat like functions \(and are usually used with parentheses in Linux, although they are not required in) Tj T* 0 Tw (the language, as in: ) Tj /F3 10 Tf 0 0 0 rg (sizeof) Tj ( ) Tj (info) Tj /F1 10 Tf 0 0 0 rg ( after ) Tj /F3 10 Tf 0 0 0 rg (struct) Tj ( ) Tj (fileinfo) Tj ( ) Tj (info;) Tj /F1 10 Tf 0 0 0 rg ( is declared\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 206.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (So use a space after these keywords:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 173.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (if, switch, case, for, do, while) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 153.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (but not with sizeof, typeof, alignof, or __attribute__. E.g.,) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 119.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
.960784 .960784 .862745 rg
n 12 0 6 12 re f*
.960784 .960784 .862745 rg
n 24 0 36 12 re f*
.960784 .960784 .862745 rg
n 60 0 6 12 re f*
.960784 .960784 .862745 rg
n 66 0 36 12 re f*
.960784 .960784 .862745 rg
n 108 0 24 12 re f*
.960784 .960784 .862745 rg
n 132 0 12 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (s) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (=) Tj 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (sizeof) Tj /F3 10 Tf 0 0 0 rg (\() Tj /F4 10 Tf 0 .501961 0 rg (struct) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (file) Tj 0 0 0 rg (\);) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 99.82362 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Do not add spaces around \(inside\) parenthesized expressions. This example is ) Tj /F2 10 Tf (bad) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
 
endstream
endobj
57 0 obj
<<
/Length 8821
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 739.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
.960784 .960784 .862745 rg
n 12 0 6 12 re f*
.960784 .960784 .862745 rg
n 24 0 36 12 re f*
.960784 .960784 .862745 rg
n 60 0 6 12 re f*
.960784 .960784 .862745 rg
n 72 0 36 12 re f*
.960784 .960784 .862745 rg
n 114 0 24 12 re f*
.960784 .960784 .862745 rg
n 144 0 12 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (s) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (=) Tj 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (sizeof) Tj /F3 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (struct) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (file) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (\);) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 707.8236 cm
q
BT 1 0 0 1 0 14 Tm .367356 Tw 12 TL /F1 10 Tf 0 0 0 rg (When declaring pointer data or a function that returns a pointer type, the preferred use of ) Tj /F3 10 Tf 0 0 0 rg (*) Tj /F1 10 Tf 0 0 0 rg ( is adjacent to) Tj T* 0 Tw (the data name or function name and not adjacent to the type name. Examples:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 650.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
.960784 .960784 .862745 rg
n 0 24 24 12 re f*
.960784 .960784 .862745 rg
n 30 24 6 12 re f*
.960784 .960784 .862745 rg
n 36 24 72 12 re f*
.960784 .960784 .862745 rg
n 108 24 6 12 re f*
.960784 .960784 .862745 rg
n 0 12 48 12 re f*
.960784 .960784 .862745 rg
n 54 12 24 12 re f*
.960784 .960784 .862745 rg
n 84 12 24 12 re f*
.960784 .960784 .862745 rg
n 114 12 48 12 re f*
.960784 .960784 .862745 rg
n 162 12 6 12 re f*
.960784 .960784 .862745 rg
n 168 12 24 12 re f*
.960784 .960784 .862745 rg
n 198 12 6 12 re f*
.960784 .960784 .862745 rg
n 204 12 18 12 re f*
.960784 .960784 .862745 rg
n 222 12 6 12 re f*
.960784 .960784 .862745 rg
n 234 12 24 12 re f*
.960784 .960784 .862745 rg
n 264 12 12 12 re f*
.960784 .960784 .862745 rg
n 276 12 36 12 re f*
.960784 .960784 .862745 rg
n 312 12 12 12 re f*
.960784 .960784 .862745 rg
n 0 0 24 12 re f*
.960784 .960784 .862745 rg
n 30 0 6 12 re f*
.960784 .960784 .862745 rg
n 36 0 72 12 re f*
.960784 .960784 .862745 rg
n 108 0 6 12 re f*
.960784 .960784 .862745 rg
n 114 0 66 12 re f*
.960784 .960784 .862745 rg
n 186 0 6 12 re f*
.960784 .960784 .862745 rg
n 192 0 6 12 re f*
.960784 .960784 .862745 rg
n 198 0 12 12 re f*
BT 1 0 0 1 0 26 Tm 12 TL /F3 10 Tf .690196 0 .25098 rg (char) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (*) Tj 0 0 0 rg (linux_banner) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* .690196 0 .25098 rg (unsigned) Tj 0 0 0 rg ( ) Tj .690196 0 .25098 rg (long) Tj 0 0 0 rg ( ) Tj .690196 0 .25098 rg (long) Tj 0 0 0 rg ( ) Tj 0 0 1 rg (memparse) Tj 0 0 0 rg (\() Tj .690196 0 .25098 rg (char) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (*) Tj 0 0 0 rg (ptr) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj .690196 0 .25098 rg (char) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (**) Tj 0 0 0 rg (retptr) Tj 0 0 0 rg (\);) Tj 0 0 0 rg  T* .690196 0 .25098 rg (char) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (*) Tj 0 0 1 rg (match_strdup) Tj 0 0 0 rg (\() Tj 0 0 0 rg (substring_t) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (*) Tj 0 0 0 rg (s) Tj 0 0 0 rg (\);) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 630.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use one space around \(on each side of\) most binary and ternary operators, such as any of these:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 597.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (=  +  -  ) Tj (<) Tj (  ) Tj (>) Tj (  *  /  %  |  ) Tj (&) Tj (  ^  ) Tj (<) Tj (=  ) Tj (>) Tj (=  ==  !=  ?  :) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 577.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (but no space after unary operators:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 544.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (&) Tj (  *  +  -  ~  !  sizeof  typeof  alignof  __attribute__  defined) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 524.2236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (no space before the postfix increment & decrement unary operators:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 491.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (++  --) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 471.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (no space after the prefix increment & decrement unary operators:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 437.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (++  --) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 417.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and no space around the ) Tj /F3 10 Tf 0 0 0 rg (.) Tj /F1 10 Tf 0 0 0 rg ( and ) Tj /F3 10 Tf 0 0 0 rg (-) Tj (>) Tj /F1 10 Tf 0 0 0 rg ( structure member operators.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 363.8236 cm
q
BT 1 0 0 1 0 38 Tm 1.787485 Tw 12 TL /F1 10 Tf 0 0 0 rg (Do not leave trailing whitespace at the ends of lines. Some editors with ) Tj /F3 10 Tf 0 0 0 rg (smart) Tj /F1 10 Tf 0 0 0 rg ( indentation will insert) Tj T* 0 Tw .185777 Tw (whitespace at the beginning of new lines as appropriate, so you can start typing the next line of code right) Tj T* 0 Tw .362093 Tw (away. However, some such editors do not remove the whitespace if you end up not putting a line of code) Tj T* 0 Tw (there, such as if you leave a blank line. As a result, you end up with lines containing trailing whitespace.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 321.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.757318 Tw (Git will warn you about patches that introduce trailing whitespace, and can optionally strip the trailing) Tj T* 0 Tw .198876 Tw (whitespace for you; however, if applying a series of patches, this may make later patches in the series fail) Tj T* 0 Tw (by changing their context lines.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 288.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (4\) Naming) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 246.8236 cm
q
BT 1 0 0 1 0 26 Tm 1.12686 Tw 12 TL /F1 10 Tf 0 0 0 rg (C is a Spartan language, and so should your naming be. Unlike Modula-2 and Pascal programmers, C) Tj T* 0 Tw .488314 Tw (programmers do not use cute names like ThisVariableIsATemporaryCounter. A C programmer would call) Tj T* 0 Tw (that variable ) Tj /F3 10 Tf 0 0 0 rg (tmp) Tj /F1 10 Tf 0 0 0 rg (, which is much easier to write, and not the least more difficult to understand.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 216.8236 cm
q
BT 1 0 0 1 0 14 Tm 1.859982 Tw 12 TL /F1 10 Tf 0 0 0 rg (HOWEVER, while mixed-case names are frowned upon, descriptive names for global variables are a) Tj T* 0 Tw (must. To call a global function ) Tj /F3 10 Tf 0 0 0 rg (foo) Tj /F1 10 Tf 0 0 0 rg ( is a shooting offense.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 174.8236 cm
q
BT 1 0 0 1 0 26 Tm .042209 Tw 12 TL /F1 10 Tf 0 0 0 rg (GLOBAL variables \(to be used only if you ) Tj /F2 10 Tf (really) Tj /F1 10 Tf ( need them\) need to have descriptive names, as do global) Tj T* 0 Tw 4.111235 Tw (functions. If you have a function that counts the number of active users, you should call that) Tj T* 0 Tw /F3 10 Tf 0 0 0 rg (count_active_users\(\)) Tj /F1 10 Tf 0 0 0 rg ( or similar, you should ) Tj /F2 10 Tf (not) Tj /F1 10 Tf ( call it ) Tj /F3 10 Tf 0 0 0 rg (cntusr\(\)) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 132.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.888735 Tw (Encoding the type of a function into the name \(so-called Hungarian notation\) is brain damaged - the) Tj T* 0 Tw .29311 Tw (compiler knows the types anyway and can check those, and it only confuses the programmer. No wonder) Tj T* 0 Tw (MicroSoft makes buggy programs.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 78.82362 cm
q
BT 1 0 0 1 0 38 Tm .042209 Tw 12 TL /F1 10 Tf 0 0 0 rg (LOCAL variable names should be short, and to the point. If you have some random integer loop counter, it) Tj T* 0 Tw .52528 Tw (should probably be called ) Tj /F3 10 Tf 0 0 0 rg (i) Tj /F1 10 Tf 0 0 0 rg (. Calling it ) Tj /F3 10 Tf 0 0 0 rg (loop_counter) Tj /F1 10 Tf 0 0 0 rg ( is non-productive, if there is no chance of it being) Tj T* 0 Tw 1.341751 Tw (mis-understood. Similarly, ) Tj /F3 10 Tf 0 0 0 rg (tmp) Tj /F1 10 Tf 0 0 0 rg ( can be just about any type of variable that is used to hold a temporary) Tj T* 0 Tw (value.) Tj T* ET
Q
Q
 
endstream
endobj
58 0 obj
<<
/Length 7380
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.804431 Tw (If you are afraid to mix up your local variable names, you have another problem, which is called the) Tj T* 0 Tw (function-growth-hormone-imbalance syndrome. See chapter 6 \(Functions\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 708.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (5\) Typedefs) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 678.0236 cm
q
BT 1 0 0 1 0 14 Tm .867045 Tw 12 TL /F1 10 Tf 0 0 0 rg (Please don't use things like ) Tj /F3 10 Tf 0 0 0 rg (vps_t) Tj /F1 10 Tf 0 0 0 rg (. It's a ) Tj /F2 10 Tf (mistake) Tj /F1 10 Tf ( to use typedef for structures and pointers. When you) Tj T* 0 Tw (see a) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 644.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 30 12 re f*
.960784 .960784 .862745 rg
n 36 0 6 12 re f*
.960784 .960784 .862745 rg
n 42 0 6 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (vps_t) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (a) Tj 0 0 0 rg (;) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 624.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the source, what does it mean? In contrast, if it says) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 591.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 36 12 re f*
.960784 .960784 .862745 rg
n 42 0 102 12 re f*
.960784 .960784 .862745 rg
n 150 0 6 12 re f*
.960784 .960784 .862745 rg
n 156 0 6 12 re f*
.960784 .960784 .862745 rg
n 162 0 6 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 .501961 0 rg (struct) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (virtual_container) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (*) Tj 0 0 0 rg (a) Tj 0 0 0 rg (;) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 571.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (you can actually tell what ) Tj /F3 10 Tf 0 0 0 rg (a) Tj /F1 10 Tf 0 0 0 rg ( is.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 553.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Lots of people think that typedefs ) Tj /F3 10 Tf 0 0 0 rg (help) Tj ( ) Tj (readability) Tj /F1 10 Tf 0 0 0 rg (. Not so. They are useful only for:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 547.6236 cm
Q
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 460 cm
Q
q
1 0 0 1 20 460 cm
Q
q
1 0 0 1 20 305 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 140 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (a.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 140 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (totally opaque objects \(where the typedef is actively used to ) Tj /F2 10 Tf (hide) Tj /F1 10 Tf ( what the object is\).) Tj T* ET
Q
Q
q
1 0 0 1 23 110 cm
q
BT 1 0 0 1 0 14 Tm 2.524597 Tw 12 TL /F1 10 Tf 0 0 0 rg (Example: ) Tj /F3 10 Tf 0 0 0 rg (pte_t) Tj /F1 10 Tf 0 0 0 rg ( etc. opaque objects that you can only access using the proper accessor) Tj T* 0 Tw (functions.) Tj T* ET
Q
Q
q
1 0 0 1 23 98 cm
Q
q
1 0 0 1 23 3 cm
.960784 .960784 .862745 rg
n 0 95 426.8898 -95 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 69 Tm  T* ET
q
1 0 0 1 16 64 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.5 Tm /F6 12.5 Tf 15 TL (Note) Tj T* ET
Q
Q
q
1 0 0 1 16 16 cm
q
BT 1 0 0 1 0 26 Tm 1.219069 Tw 12 TL /F1 10 Tf 0 0 0 rg (Opaqueness and ) Tj /F3 10 Tf 0 0 0 rg (accessor) Tj ( ) Tj (functions) Tj /F1 10 Tf 0 0 0 rg ( are not good in themselves. The reason we) Tj T* 0 Tw 2.957126 Tw (have them for things like pte_t etc. is that there really is absolutely ) Tj /F2 10 Tf (zero) Tj /F1 10 Tf ( portably) Tj T* 0 Tw (accessible information there.) Tj T* ET
Q
Q
q
1 J
1 j
.662745 .662745 .662745 RG
.5 w
n 0 95 m 426.8898 95 l S
n 0 0 m 426.8898 0 l S
n 0 0 m 0 95 l S
n 426.8898 0 m 426.8898 95 l S
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 20 299 cm
Q
q
1 0 0 1 20 108 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 176 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (b.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 176 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Clear integer types, where the abstraction ) Tj /F2 10 Tf (helps) Tj /F1 10 Tf ( avoid confusion whether it is ) Tj /F3 10 Tf 0 0 0 rg (int) Tj /F1 10 Tf 0 0 0 rg ( or ) Tj /F3 10 Tf 0 0 0 rg (long) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 23 158 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (u8/u16/u32 are perfectly fine typedefs, although they fit into category \(d\) better than here.) Tj T* ET
Q
Q
q
1 0 0 1 23 146 cm
Q
q
1 0 0 1 23 45 cm
.960784 .960784 .862745 rg
n 0 101 426.8898 -101 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 75 Tm  T* ET
q
1 0 0 1 16 70 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.5 Tm /F6 12.5 Tf 15 TL (Note) Tj T* ET
Q
Q
q
1 0 0 1 16 34 cm
q
BT 1 0 0 1 0 14 Tm 2.004651 Tw 12 TL /F1 10 Tf 0 0 0 rg (Again - there needs to be a ) Tj /F2 10 Tf (reason) Tj /F1 10 Tf ( for this. If something is ) Tj /F3 10 Tf 0 0 0 rg (unsigned) Tj ( ) Tj (long) Tj /F1 10 Tf 0 0 0 rg (, then) Tj T* 0 Tw (there's no reason to do) Tj T* ET
Q
Q
q
1 0 0 1 16 28 cm
Q
q
1 0 0 1 16 16 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (typedef unsigned long myflags_t;) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 16 16 cm
Q
q
1 J
1 j
.662745 .662745 .662745 RG
.5 w
n 0 101 m 426.8898 101 l S
n 0 0 m 426.8898 0 l S
n 0 0 m 0 101 l S
n 426.8898 0 m 426.8898 101 l S
Q
Q
q
1 0 0 1 23 39 cm
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .181163 Tw 12 TL /F1 10 Tf 0 0 0 rg (but if there is a clear reason for why it under certain circumstances might be an ) Tj /F3 10 Tf 0 0 0 rg (unsigned) Tj ( ) Tj (int) Tj /F1 10 Tf 0 0 0 rg  T* 0 Tw .171984 Tw (and under other configurations might be ) Tj /F3 10 Tf 0 0 0 rg (unsigned) Tj ( ) Tj (long) Tj /F1 10 Tf 0 0 0 rg (, then by all means go ahead and use) Tj T* 0 Tw (a typedef.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 90 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 6.22 0 Td (c.) Tj T* -6.22 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (when you use sparse to literally create a ) Tj /F2 10 Tf (new) Tj /F1 10 Tf ( type for type-checking.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (d.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (New types which are identical to standard C99 types, in certain exceptional circumstances.) Tj T* ET
Q
Q
q
1 0 0 1 23 39 cm
q
BT 1 0 0 1 0 14 Tm 3.168735 Tw 12 TL /F1 10 Tf 0 0 0 rg (Although it would only take a short amount of time for the eyes and brain to become) Tj T* 0 Tw (accustomed to the standard types like ) Tj /F3 10 Tf 0 0 0 rg (uint32_t) Tj /F1 10 Tf 0 0 0 rg (, some people object to their use anyway.) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .840976 Tw 12 TL /F1 10 Tf 0 0 0 rg (Therefore, the Linux-specific ) Tj /F3 10 Tf 0 0 0 rg (u8/u16/u32/u64) Tj /F1 10 Tf 0 0 0 rg ( types and their signed equivalents which are) Tj T* 0 Tw 1.305318 Tw (identical to standard types are permitted -- although they are not mandatory in new code of) Tj T* 0 Tw (your own.) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
59 0 obj
<<
/Length 7472
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 681.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 11 Tm  T* ET
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.557318 Tw (When editing existing code which already uses one or the other set of types, you should) Tj T* 0 Tw (conform to the existing choices in that code.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (e.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Types safe for use in userspace.) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm -0.072016 Tw 12 TL /F1 10 Tf 0 0 0 rg (In certain structures which are visible to userspace, we cannot require C99 types and cannot use) Tj T* 0 Tw 1.066235 Tw (the ) Tj /F3 10 Tf 0 0 0 rg (u32) Tj /F1 10 Tf 0 0 0 rg ( form above. Thus, we use __u32 and similar types in all structures which are shared) Tj T* 0 Tw (with userspace.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 681.0236 cm
Q
q
1 0 0 1 62.69291 651.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .567765 Tw (Maybe there are other cases too, but the rule should basically be to NEVER EVER use a typedef unless) Tj T* 0 Tw (you can clearly match one of those rules.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 621.0236 cm
q
BT 1 0 0 1 0 14 Tm .241163 Tw 12 TL /F1 10 Tf 0 0 0 rg (In general, a pointer, or a struct that has elements that can reasonably be directly accessed should ) Tj /F2 10 Tf (never) Tj /F1 10 Tf  T* 0 Tw (be a typedef.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 588.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (6\) Functions) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 558.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .799988 Tw (Functions should be short and sweet, and do just one thing. They should fit on one or two screenfuls of) Tj T* 0 Tw (text \(the ISO/ANSI screen size is 80x24, as we all know\), and do one thing and do that well.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 516.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .53561 Tw (The maximum length of a function is inversely proportional to the complexity and indentation level of that) Tj T* 0 Tw .569985 Tw (function. So, if you have a conceptually simple function that is just one long \(but simple\) case-statement,) Tj T* 0 Tw (where you have to do lots of small things for a lot of different cases, it's OK to have a longer function.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 450.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL 1.24784 Tw (However, if you have a complex function, and you suspect that a less-than-gifted first-year high-school) Tj T* 0 Tw 1.57561 Tw (student might not even understand what the function is all about, you should adhere to the maximum) Tj T* 0 Tw .049986 Tw (limits all the more closely. Use helper functions with descriptive names \(you can ask the compiler to in-line) Tj T* 0 Tw 1.257882 Tw (them if you think it's performance-critical, and it will probably do a better job of it than you would have) Tj T* 0 Tw (done\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 396.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .921235 Tw (Another measure of the function is the number of local variables. They shouldn't exceed 5-10, or you're) Tj T* 0 Tw .014985 Tw (doing something wrong. Re-think the function, and split it into smaller pieces. A human brain can generally) Tj T* 0 Tw .12881 Tw (easily keep track of about 7 different things, anything more and it gets confused. You know you're brilliant,) Tj T* 0 Tw (but maybe you'd like to understand what you did 2 weeks from now.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 366.0236 cm
q
BT 1 0 0 1 0 14 Tm .136098 Tw 12 TL /F1 10 Tf 0 0 0 rg (In source files, separate functions with one blank line. If the function is exported, the ) Tj /F2 10 Tf (EXPORT) Tj /F1 10 Tf ( macro for it) Tj T* 0 Tw (should follow immediately after the closing function brace line. E.g.:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 284.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 72 re B*
Q
q
.960784 .960784 .862745 rg
n 0 48 18 12 re f*
.960784 .960784 .862745 rg
n 24 48 72 12 re f*
.960784 .960784 .862745 rg
n 96 48 6 12 re f*
.960784 .960784 .862745 rg
n 102 48 24 12 re f*
.960784 .960784 .862745 rg
n 126 48 6 12 re f*
.960784 .960784 .862745 rg
n 0 36 6 12 re f*
.960784 .960784 .862745 rg
n 48 24 36 12 re f*
.960784 .960784 .862745 rg
n 90 24 72 12 re f*
.960784 .960784 .862745 rg
n 168 24 12 12 re f*
.960784 .960784 .862745 rg
n 186 24 84 12 re f*
.960784 .960784 .862745 rg
n 270 24 6 12 re f*
.960784 .960784 .862745 rg
n 0 12 6 12 re f*
.960784 .960784 .862745 rg
n 0 0 78 12 re f*
.960784 .960784 .862745 rg
n 78 0 6 12 re f*
.960784 .960784 .862745 rg
n 84 0 72 12 re f*
.960784 .960784 .862745 rg
n 156 0 12 12 re f*
BT 1 0 0 1 0 50 Tm 12 TL /F3 10 Tf .690196 0 .25098 rg (int) Tj 0 0 0 rg ( ) Tj 0 0 1 rg (system_is_up) Tj 0 0 0 rg (\() Tj .690196 0 .25098 rg (void) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* 0 0 0 rg ({) Tj 0 0 0 rg  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (system_state) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (==) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (SYSTEM_RUNNING) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj 0 0 0 rg  T* 0 0 0 rg (EXPORT_SYMBOL) Tj 0 0 0 rg (\() Tj 0 0 0 rg (system_is_up) Tj 0 0 0 rg (\);) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 252.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .291235 Tw (In function prototypes, include parameter names with their data types. Although this is not required by the) Tj T* 0 Tw (C language, it is preferred in Linux because it is a simple way to add valuable information for the reader.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 219.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (7\) Centralized exiting of functions) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 189.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .221235 Tw (Albeit deprecated by some people, the equivalent of the goto statement is used frequently by compilers in) Tj T* 0 Tw (form of the unconditional jump instruction.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 159.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .05061 Tw (The goto statement comes in handy when a function exits from multiple locations and some common work) Tj T* 0 Tw (such as cleanup has to be done. If there is no cleanup needed then just return directly.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 105.8236 cm
q
BT 1 0 0 1 0 38 Tm .771567 Tw 12 TL /F1 10 Tf 0 0 0 rg (Choose label names which say what the goto does or why the goto exists. An example of a good name) Tj T* 0 Tw .67284 Tw (could be ) Tj /F3 10 Tf 0 0 0 rg (out_free_buffer:) Tj /F1 10 Tf 0 0 0 rg ( if the goto frees ) Tj /F3 10 Tf 0 0 0 rg (buffer) Tj /F1 10 Tf 0 0 0 rg (. Avoid using GW-BASIC names like ) Tj /F3 10 Tf 0 0 0 rg (err1:) Tj /F1 10 Tf 0 0 0 rg ( and) Tj T* 0 Tw 2.051098 Tw /F3 10 Tf 0 0 0 rg (err2:) Tj /F1 10 Tf 0 0 0 rg (, as you would have to renumber them if you ever add or remove exit paths, and they make) Tj T* 0 Tw (correctness difficult to verify anyway.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 87.82362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The rationale for using gotos is:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 81.82362 cm
Q
q
1 0 0 1 62.69291 81.82362 cm
Q
 
endstream
endobj
60 0 obj
<<
/Length 11608
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 753.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (unconditional statements are easier to understand and follow) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 747.0236 cm
Q
q
1 0 0 1 62.69291 735.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (nesting is reduced) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 729.0236 cm
Q
q
1 0 0 1 62.69291 717.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (errors by not updating individual exit points when making modifications are prevented) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 711.0236 cm
Q
q
1 0 0 1 62.69291 699.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (saves the compiler work to optimize redundant code away ;\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 699.0236 cm
Q
q
1 0 0 1 62.69291 425.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 264 re B*
Q
q
.960784 .960784 .862745 rg
n 0 240 18 12 re f*
.960784 .960784 .862745 rg
n 24 240 18 12 re f*
.960784 .960784 .862745 rg
n 42 240 6 12 re f*
.960784 .960784 .862745 rg
n 48 240 18 12 re f*
.960784 .960784 .862745 rg
n 72 240 6 12 re f*
.960784 .960784 .862745 rg
n 78 240 6 12 re f*
.960784 .960784 .862745 rg
n 0 228 6 12 re f*
.960784 .960784 .862745 rg
n 48 216 18 12 re f*
.960784 .960784 .862745 rg
n 72 216 36 12 re f*
.960784 .960784 .862745 rg
n 114 216 6 12 re f*
.960784 .960784 .862745 rg
n 126 216 6 12 re f*
.960784 .960784 .862745 rg
n 132 216 6 12 re f*
.960784 .960784 .862745 rg
n 48 204 24 12 re f*
.960784 .960784 .862745 rg
n 78 204 6 12 re f*
.960784 .960784 .862745 rg
n 84 204 36 12 re f*
.960784 .960784 .862745 rg
n 120 204 6 12 re f*
.960784 .960784 .862745 rg
n 48 180 36 12 re f*
.960784 .960784 .862745 rg
n 90 180 6 12 re f*
.960784 .960784 .862745 rg
n 102 180 42 12 re f*
.960784 .960784 .862745 rg
n 144 180 6 12 re f*
.960784 .960784 .862745 rg
n 150 180 24 12 re f*
.960784 .960784 .862745 rg
n 174 180 6 12 re f*
.960784 .960784 .862745 rg
n 186 180 60 12 re f*
.960784 .960784 .862745 rg
n 246 180 12 12 re f*
.960784 .960784 .862745 rg
n 48 168 12 12 re f*
.960784 .960784 .862745 rg
n 66 168 6 12 re f*
.960784 .960784 .862745 rg
n 72 168 6 12 re f*
.960784 .960784 .862745 rg
n 78 168 36 12 re f*
.960784 .960784 .862745 rg
n 114 168 6 12 re f*
.960784 .960784 .862745 rg
n 96 156 36 12 re f*
.960784 .960784 .862745 rg
n 138 156 6 12 re f*
.960784 .960784 .862745 rg
n 144 156 36 12 re f*
.960784 .960784 .862745 rg
n 180 156 6 12 re f*
.960784 .960784 .862745 rg
n 48 132 12 12 re f*
.960784 .960784 .862745 rg
n 66 132 6 12 re f*
.960784 .960784 .862745 rg
n 72 132 60 12 re f*
.960784 .960784 .862745 rg
n 132 132 6 12 re f*
.960784 .960784 .862745 rg
n 144 132 6 12 re f*
.960784 .960784 .862745 rg
n 96 120 30 12 re f*
.960784 .960784 .862745 rg
n 132 120 6 12 re f*
.960784 .960784 .862745 rg
n 138 120 30 12 re f*
.960784 .960784 .862745 rg
n 168 120 6 12 re f*
.960784 .960784 .862745 rg
n 180 120 6 12 re f*
.960784 .960784 .862745 rg
n 144 108 18 12 re f*
.960784 .960784 .862745 rg
n 96 96 6 12 re f*
.960784 .960784 .862745 rg
n 96 84 36 12 re f*
.960784 .960784 .862745 rg
n 138 84 6 12 re f*
.960784 .960784 .862745 rg
n 150 84 6 12 re f*
.960784 .960784 .862745 rg
n 156 84 6 12 re f*
.960784 .960784 .862745 rg
n 96 72 24 12 re f*
.960784 .960784 .862745 rg
n 126 72 90 12 re f*
.960784 .960784 .862745 rg
n 216 72 6 12 re f*
.960784 .960784 .862745 rg
n 48 60 6 12 re f*
.960784 .960784 .862745 rg
n 48 48 18 12 re f*
.960784 .960784 .862745 rg
n 0 36 90 12 re f*
.960784 .960784 .862745 rg
n 90 36 6 12 re f*
.960784 .960784 .862745 rg
n 48 24 30 12 re f*
.960784 .960784 .862745 rg
n 78 24 6 12 re f*
.960784 .960784 .862745 rg
n 84 24 36 12 re f*
.960784 .960784 .862745 rg
n 120 24 12 12 re f*
.960784 .960784 .862745 rg
n 48 12 36 12 re f*
.960784 .960784 .862745 rg
n 90 12 36 12 re f*
.960784 .960784 .862745 rg
n 126 12 6 12 re f*
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
BT 1 0 0 1 0 242 Tm 12 TL /F3 10 Tf .690196 0 .25098 rg (int) Tj 0 0 0 rg ( ) Tj 0 0 1 rg (fun) Tj 0 0 0 rg (\() Tj .690196 0 .25098 rg (int) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (a) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* 0 0 0 rg ({) Tj 0 0 0 rg  T* (        ) Tj .690196 0 .25098 rg (int) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (result) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (=) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (0) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* (        ) Tj .690196 0 .25098 rg (char) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (*) Tj 0 0 0 rg (buffer) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T*  T* (        ) Tj 0 0 0 rg (buffer) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (kmalloc) Tj 0 0 0 rg (\() Tj 0 0 0 rg (SIZE) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (GFP_KERNEL) Tj 0 0 0 rg (\);) Tj 0 0 0 rg  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj .4 .4 .4 rg (!) Tj 0 0 0 rg (buffer) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (                ) Tj /F4 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .4 .4 .4 rg (-) Tj 0 0 0 rg (ENOMEM) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T*  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (condition1) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* (                ) Tj /F4 10 Tf 0 .501961 0 rg (while) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (loop1) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* (                        ) Tj 0 0 0 rg (...) Tj 0 0 0 rg  T* (                ) Tj 0 0 0 rg (}) Tj 0 0 0 rg  T* (                ) Tj 0 0 0 rg (result) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (=) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (1) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* (                ) Tj /F4 10 Tf 0 .501961 0 rg (goto) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (out_free_buffer) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (}) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (...) Tj 0 0 0 rg  T* .627451 .627451 0 rg (out_free_buffer) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (kfree) Tj 0 0 0 rg (\() Tj 0 0 0 rg (buffer) Tj 0 0 0 rg (\);) Tj 0 0 0 rg  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (result) Tj 0 0 0 rg (;) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 405.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A common type of bug to be aware of is ) Tj /F3 10 Tf 0 0 0 rg (one) Tj ( ) Tj (err) Tj ( ) Tj (bugs) Tj /F1 10 Tf 0 0 0 rg ( which look like this:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 336.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
.960784 .960784 .862745 rg
n 0 36 18 12 re f*
.960784 .960784 .862745 rg
n 18 36 6 12 re f*
.960784 .960784 .862745 rg
n 48 24 30 12 re f*
.960784 .960784 .862745 rg
n 78 24 6 12 re f*
.960784 .960784 .862745 rg
n 84 24 18 12 re f*
.960784 .960784 .862745 rg
n 102 24 6 12 re f*
.960784 .960784 .862745 rg
n 108 24 6 12 re f*
.960784 .960784 .862745 rg
n 114 24 18 12 re f*
.960784 .960784 .862745 rg
n 132 24 12 12 re f*
.960784 .960784 .862745 rg
n 48 12 30 12 re f*
.960784 .960784 .862745 rg
n 78 12 6 12 re f*
.960784 .960784 .862745 rg
n 84 12 18 12 re f*
.960784 .960784 .862745 rg
n 102 12 12 12 re f*
.960784 .960784 .862745 rg
n 48 0 36 12 re f*
.960784 .960784 .862745 rg
n 90 0 18 12 re f*
.960784 .960784 .862745 rg
n 108 0 6 12 re f*
BT 1 0 0 1 0 38 Tm 12 TL /F3 10 Tf .627451 .627451 0 rg (err) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (kfree) Tj 0 0 0 rg (\() Tj 0 0 0 rg (foo) Tj .4 .4 .4 rg (-) Tj (>) Tj 0 0 0 rg (bar) Tj 0 0 0 rg (\);) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (kfree) Tj 0 0 0 rg (\() Tj 0 0 0 rg (foo) Tj 0 0 0 rg (\);) Tj 0 0 0 rg  T* (        ) Tj /F4 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ret) Tj 0 0 0 rg (;) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 304.6236 cm
q
BT 1 0 0 1 0 14 Tm -0.132009 Tw 12 TL /F1 10 Tf 0 0 0 rg (The bug in this code is that on some exit paths ) Tj /F3 10 Tf 0 0 0 rg (foo) Tj /F1 10 Tf 0 0 0 rg ( is NULL. Normally the fix for this is to split it up into two) Tj T* 0 Tw (error labels ) Tj /F3 10 Tf 0 0 0 rg (err_free_bar:) Tj /F1 10 Tf 0 0 0 rg ( and ) Tj /F3 10 Tf 0 0 0 rg (err_free_foo:) Tj /F1 10 Tf 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 223.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 72 re B*
Q
q
.960784 .960784 .862745 rg
n 0 48 72 12 re f*
.960784 .960784 .862745 rg
n 72 48 6 12 re f*
.960784 .960784 .862745 rg
n 42 36 30 12 re f*
.960784 .960784 .862745 rg
n 72 36 6 12 re f*
.960784 .960784 .862745 rg
n 78 36 18 12 re f*
.960784 .960784 .862745 rg
n 96 36 6 12 re f*
.960784 .960784 .862745 rg
n 102 36 6 12 re f*
.960784 .960784 .862745 rg
n 108 36 18 12 re f*
.960784 .960784 .862745 rg
n 126 36 12 12 re f*
.960784 .960784 .862745 rg
n 0 24 72 12 re f*
.960784 .960784 .862745 rg
n 72 24 6 12 re f*
.960784 .960784 .862745 rg
n 42 12 30 12 re f*
.960784 .960784 .862745 rg
n 72 12 6 12 re f*
.960784 .960784 .862745 rg
n 78 12 18 12 re f*
.960784 .960784 .862745 rg
n 96 12 12 12 re f*
.960784 .960784 .862745 rg
n 42 0 36 12 re f*
.960784 .960784 .862745 rg
n 84 0 18 12 re f*
.960784 .960784 .862745 rg
n 102 0 6 12 re f*
BT 1 0 0 1 0 50 Tm 12 TL /F3 10 Tf .627451 .627451 0 rg (err_free_bar) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (       ) Tj 0 0 0 rg (kfree) Tj 0 0 0 rg (\() Tj 0 0 0 rg (foo) Tj .4 .4 .4 rg (-) Tj (>) Tj 0 0 0 rg (bar) Tj 0 0 0 rg (\);) Tj 0 0 0 rg  T* .627451 .627451 0 rg (err_free_foo) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (       ) Tj 0 0 0 rg (kfree) Tj 0 0 0 rg (\() Tj 0 0 0 rg (foo) Tj 0 0 0 rg (\);) Tj 0 0 0 rg  T* (       ) Tj /F4 10 Tf 0 .501961 0 rg (return) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (ret) Tj 0 0 0 rg (;) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 203.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Ideally you should simulate errors to test all exit paths.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 170.4236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (8\) Commenting) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 128.4236 cm
q
BT 1 0 0 1 0 26 Tm 1.30186 Tw 12 TL /F1 10 Tf 0 0 0 rg (Comments are good, but there is also a danger of over-commenting. NEVER try to explain HOW your) Tj T* 0 Tw 1.210488 Tw (code works in a comment: it's much better to write the code so that the ) Tj /F2 10 Tf (working) Tj /F1 10 Tf ( is obvious, and it's a) Tj T* 0 Tw (waste of time to explain badly written code.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 86.42362 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.257633 Tw (Generally, you want your comments to tell WHAT your code does, not HOW. Also, try to avoid putting) Tj T* 0 Tw .209398 Tw (comments inside a function body: if the function is so complex that you need to separately comment parts) Tj T* 0 Tw .143322 Tw (of it, you should probably go back to chapter 6 for a while. You can make small comments to note or warn) Tj T* 0 Tw ET
Q
Q
 
endstream
endobj
61 0 obj
<<
/Length 4434
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.23061 Tw (about something particularly clever \(or ugly\), but try to avoid excess. Instead, put the comments at the) Tj T* 0 Tw (head of the function, telling people what it does, and possibly WHY it does it.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 711.0236 cm
q
BT 1 0 0 1 0 14 Tm 3.946412 Tw 12 TL /F1 10 Tf 0 0 0 rg (When commenting the kernel API functions, please use the kernel-doc format. See the files at) Tj T* 0 Tw /F7 10 Tf 0 0 0 rg (Documentation/doc-guide/ <) Tj (doc_guide) Tj (>) Tj /F1 10 Tf 0 0 0 rg ( and ) Tj /F3 10 Tf 0 0 0 rg (scripts/kernel-doc) Tj /F1 10 Tf 0 0 0 rg ( for details.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 693.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The preferred style for long \(multi-line\) comments is:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 575.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 108 re B*
Q
q
.25098 .501961 .501961 rg
BT 1 0 0 1 0 86 Tm /F5 10 Tf 12 TL (/*) Tj T* ( * This is the preferred style for multi-line) Tj T* ( * comments in the Linux kernel source code.) Tj T* ( * Please use it consistently.) Tj T* ( *) Tj T* ( * Description:  A column of asterisks on the left side,) Tj T* ( * with beginning and ending almost-blank lines.) Tj T* ( */) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 555.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For files in net/ and drivers/net/ the preferred style for long \(multi-line\) comments is a little different.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 462.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
.25098 .501961 .501961 rg
BT 1 0 0 1 0 62 Tm /F5 10 Tf 12 TL (/* The preferred comment style for files in net/ and drivers/net) Tj T* ( * looks like this.) Tj T* ( *) Tj T* ( * It is nearly the same as the generally preferred comment style,) Tj T* ( * but there is no initial almost-blank line.) Tj T* ( */) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 418.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .709431 Tw (It's also important to comment data, whether they are basic types or derived types. To this end, use just) Tj T* 0 Tw .146457 Tw (one data declaration per line \(no commas for multiple data declarations\). This leaves you room for a small) Tj T* 0 Tw (comment on each item, explaining its use.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 385.6236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (9\) You've made a mess of it) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 331.6236 cm
q
BT 1 0 0 1 0 38 Tm 1.679986 Tw 12 TL /F1 10 Tf 0 0 0 rg (That's OK, we all do. You've probably been told by your long-time Unix user helper that ) Tj /F3 10 Tf 0 0 0 rg (GNU) Tj ( ) Tj (emacs) Tj /F1 10 Tf 0 0 0 rg  T* 0 Tw .056303 Tw (automatically formats the C sources for you, and you've noticed that yes, it does do that, but the defaults it) Tj T* 0 Tw .599987 Tw (uses are less than desirable \(in fact, they are worse than random typing - an infinite number of monkeys) Tj T* 0 Tw (typing into GNU emacs would never make a good program\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 301.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .313171 Tw (So, you can either get rid of GNU emacs, or change it to use saner values. To do the latter, you can stick) Tj T* 0 Tw (the following in your .emacs file:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 88.42362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 204 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 182 Tm /F3 10 Tf 12 TL (\(defun c-lineup-arglist-tabs-only \(ignored\)) Tj T* (  "Line up argument lists by tabs, not spaces") Tj T* (  \(let* \(\(anchor \(c-langelem-pos c-syntactic-element\)\)) Tj T* (         \(column \(c-langelem-2nd-pos c-syntactic-element\)\)) Tj T* (         \(offset \(- \(1+ column\) anchor\)\)) Tj T* (         \(steps \(floor offset c-basic-offset\)\)\)) Tj T* (    \(* \(max steps 1\)) Tj T* (       c-basic-offset\)\)\)) Tj T*  T* (\(add-hook 'c-mode-common-hook) Tj T* (          \(lambda \(\)) Tj T* (            ;; Add kernel style) Tj T* (            \(c-add-style) Tj T* (             "linux-tabs-only") Tj T* (             '\("linux" \(c-offsets-alist) Tj T* (                        \(arglist-cont-nonempty) Tj T* ET
Q
Q
Q
Q
Q
 
endstream
endobj
62 0 obj
<<
/Length 4635
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 595.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 474 168 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 146 Tm /F3 10 Tf 12 TL (                         c-lineup-gcc-asm-reg) Tj T* (                         c-lineup-arglist-tabs-only\)\)\)\)\)\)) Tj T*  T* (\(add-hook 'c-mode-hook) Tj T* (          \(lambda \(\)) Tj T* (            \(let \(\(filename \(buffer-file-name\)\)\)) Tj T* (              ;; Enable kernel mode for the appropriate files) Tj T* (              \(when \(and filename) Tj T* (                         \(string-match \(expand-file-name "~/src/linux-trees"\)) Tj T* (                                       filename\)\)) Tj T* (                \(setq indent-tabs-mode t\)) Tj T* (                \(setq show-trailing-whitespace t\)) Tj T* (                \(c-set-style "linux-tabs-only"\)\)\)\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 575.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This will make emacs go better with the kernel coding style for C files below ) Tj /F3 10 Tf 0 0 0 rg (~/src/linux-trees) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 557.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (But even if you fail in getting emacs to do sane formatting, not everything is lost: use ) Tj /F3 10 Tf 0 0 0 rg (indent) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 491.8236 cm
q
BT 1 0 0 1 0 50 Tm -0.048346 Tw 12 TL /F1 10 Tf 0 0 0 rg (Now, again, GNU indent has the same brain-dead settings that GNU emacs has, which is why you need to) Tj T* 0 Tw .214987 Tw (give it a few command line options. However, that's not too bad, because even the makers of GNU indent) Tj T* 0 Tw 2.11936 Tw (recognize the authority of K) Tj (&) Tj (R \(the GNU people aren't evil, they are just severely misguided in this) Tj T* 0 Tw .221163 Tw (matter\), so you just give indent the options ) Tj /F3 10 Tf 0 0 0 rg (-kr) Tj ( ) Tj (-i8) Tj /F1 10 Tf 0 0 0 rg ( \(stands for ) Tj /F3 10 Tf 0 0 0 rg (K) Tj (&) Tj (R,) Tj ( ) Tj (8) Tj ( ) Tj (character) Tj ( ) Tj (indents) Tj /F1 10 Tf 0 0 0 rg (\), or use) Tj T* 0 Tw /F3 10 Tf 0 0 0 rg (scripts/Lindent) Tj /F1 10 Tf 0 0 0 rg (, which indents in the latest style.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 461.8236 cm
q
BT 1 0 0 1 0 14 Tm -0.010569 Tw 12 TL /F3 10 Tf 0 0 0 rg (indent) Tj /F1 10 Tf 0 0 0 rg ( has a lot of options, and especially when it comes to comment re-formatting you may want to take) Tj T* 0 Tw (a look at the man page. But remember: ) Tj /F3 10 Tf 0 0 0 rg (indent) Tj /F1 10 Tf 0 0 0 rg ( is not a fix for bad programming.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 428.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (10\) Kconfig configuration files) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 386.8236 cm
q
BT 1 0 0 1 0 26 Tm .161984 Tw 12 TL /F1 10 Tf 0 0 0 rg (For all of the Kconfig* configuration files throughout the source tree, the indentation is somewhat different.) Tj T* 0 Tw .86881 Tw (Lines under a ) Tj /F3 10 Tf 0 0 0 rg (config) Tj /F1 10 Tf 0 0 0 rg ( definition are indented with one tab, while help text is indented an additional two) Tj T* 0 Tw (spaces. Example:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 269.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 108 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 86 Tm /F3 10 Tf 12 TL (config AUDIT) Tj T* (      bool "Auditing support") Tj T* (      depends on NET) Tj T* (      help) Tj T* (        Enable auditing infrastructure that can be used with another) Tj T* (        kernel subsystem, such as SELinux \(which requires this for) Tj T* (        logging of avc messages output\).  Does not do system-call) Tj T* (        auditing without CONFIG_AUDITSYSCALL.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 237.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 3.54248 Tw (Seriously dangerous features \(such as write support for certain filesystems\) should advertise this) Tj T* 0 Tw (prominently in their prompt string:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 168.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F3 10 Tf 12 TL (config ADFS_FS_RW) Tj T* (      bool "ADFS write support \(DANGEROUS\)") Tj T* (      depends on ADFS_FS) Tj T* (      ...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 148.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For full documentation on the configuration files, see the file Documentation/kbuild/kconfig-language.txt.) Tj T* ET
Q
Q
 
endstream
endobj
63 0 obj
<<
/Length 5839
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 744.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (11\) Data structures) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 690.0236 cm
q
BT 1 0 0 1 0 38 Tm -0.110787 Tw 12 TL /F1 10 Tf 0 0 0 rg (Data structures that have visibility outside the single-threaded environment they are created and destroyed) Tj T* 0 Tw .997984 Tw (in should always have reference counts. In the kernel, garbage collection doesn't exist \(and outside the) Tj T* 0 Tw -0.058682 Tw (kernel garbage collection is slow and inefficient\), which means that you absolutely ) Tj /F2 10 Tf (have) Tj /F1 10 Tf ( to reference count) Tj T* 0 Tw (all your uses.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 648.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.12561 Tw (Reference counting means that you can avoid locking, and allows multiple users to have access to the) Tj T* 0 Tw .994104 Tw (data structure in parallel - and not having to worry about the structure suddenly going away from under) Tj T* 0 Tw (them just because they slept or did something else for a while.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 606.0236 cm
q
BT 1 0 0 1 0 26 Tm 1.36936 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that locking is ) Tj /F2 10 Tf (not) Tj /F1 10 Tf ( a replacement for reference counting. Locking is used to keep data structures) Tj T* 0 Tw 1.256905 Tw (coherent, while reference counting is a memory management technique. Usually both are needed, and) Tj T* 0 Tw (they are not to be confused with each other.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 564.0236 cm
q
BT 1 0 0 1 0 26 Tm .464985 Tw 12 TL /F1 10 Tf 0 0 0 rg (Many data structures can indeed have two levels of reference counting, when there are users of different) Tj T* 0 Tw .104651 Tw /F3 10 Tf 0 0 0 rg (classes) Tj /F1 10 Tf 0 0 0 rg (. The subclass count counts the number of subclass users, and decrements the global count just) Tj T* 0 Tw (once when the subclass count goes to zero.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 522.0236 cm
q
BT 1 0 0 1 0 26 Tm .93816 Tw 12 TL /F1 10 Tf 0 0 0 rg (Examples of this kind of ) Tj /F3 10 Tf 0 0 0 rg (multi-level-reference-counting) Tj /F1 10 Tf 0 0 0 rg ( can be found in memory management) Tj T* 0 Tw 2.469976 Tw (\() Tj /F3 10 Tf 0 0 0 rg (struct) Tj ( ) Tj (mm_struct) Tj /F1 10 Tf 0 0 0 rg (: mm_users and mm_count\), and in filesystem code \() Tj /F3 10 Tf 0 0 0 rg (struct) Tj ( ) Tj (super_block) Tj /F1 10 Tf 0 0 0 rg (:) Tj T* 0 Tw (s_count and s_active\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 492.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .244431 Tw (Remember: if another thread can find your data structure, and you don't have a reference count on it, you) Tj T* 0 Tw (almost certainly have a bug.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 459.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (12\) Macros, Enums and RTL) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 441.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Names of macros defining constants and labels in enums are capitalized.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 395.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
.737255 .478431 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (#define CONSTANT 0x12345) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 375.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Enums are preferred when defining several related constants.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 345.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.303828 Tw (CAPITALIZED macro names are appreciated but macros resembling functions may be named in lower) Tj T* 0 Tw (case.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 327.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Generally, inline functions are preferable to macros resembling functions.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 309.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Macros with multiple statements should be enclosed in a do - while block:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 216.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
.737255 .478431 0 rg
BT 1 0 0 1 0 62 Tm /F3 10 Tf 12 TL (#define macrofun\(a, b, c\)                       \\) Tj T* (        do {                                    \\) Tj T* (                if \(a == 5\)                     \\) Tj T* (                        do_this\(b, c\);          \\) Tj T* (        } while \(0\)) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 196.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Things to avoid when using macros:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 190.6236 cm
Q
q
1 0 0 1 62.69291 190.6236 cm
Q
q
1 0 0 1 62.69291 178.6236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (macros that affect control flow:) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 178.6236 cm
Q
q
1 0 0 1 62.69291 97.42362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 72 re B*
Q
q
.960784 .960784 .862745 rg
n 0 48 294 12 re f*
.960784 .960784 .862745 rg
n 0 36 294 12 re f*
.960784 .960784 .862745 rg
n 0 24 162 12 re f*
.960784 .960784 .862745 rg
n 168 24 6 12 re f*
.960784 .960784 .862745 rg
n 174 24 120 12 re f*
.960784 .960784 .862745 rg
n 0 12 294 12 re f*
.960784 .960784 .862745 rg
n 0 0 114 12 re f*
BT 1 0 0 1 0 50 Tm 12 TL /F3 10 Tf .737255 .478431 0 rg (#define FOO\(x\)                                  \\) Tj T* (        do {                                    \\) Tj T* (                if \(blah\(x\) ) Tj (<) Tj ( 0\)                \\) Tj T* (                        return -EBUGGERED;      \\) Tj T* (        } while \(0\)) Tj T* ET
Q
Q
Q
Q
Q
 
endstream
endobj
64 0 obj
<<
/Length 5675
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 14 Tm 1.297356 Tw 12 TL /F1 10 Tf 0 0 0 rg (is a ) Tj /F2 10 Tf (very) Tj /F1 10 Tf ( bad idea. It looks like a function call but exits the ) Tj /F3 10 Tf 0 0 0 rg (calling) Tj /F1 10 Tf 0 0 0 rg ( function; don't break the internal) Tj T* 0 Tw (parsers of those who will read the code.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 735.0236 cm
Q
q
1 0 0 1 62.69291 735.0236 cm
Q
q
1 0 0 1 62.69291 723.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (macros that depend on having a local variable with a magic name:) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 723.0236 cm
Q
q
1 0 0 1 62.69291 677.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
.737255 .478431 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (#define FOO\(val\) bar\(index, val\)) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 645.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .207488 Tw (might look like a good thing, but it's confusing as hell when one reads the code and it's prone to breakage) Tj T* 0 Tw (from seemingly innocent changes.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 615.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .263145 Tw (3\) macros with arguments that are used as l-values: FOO\(x\) = y; will bite you if somebody e.g. turns FOO) Tj T* 0 Tw (into an inline function.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 585.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 4.61816 Tw (4\) forgetting about precedence: macros defining constants using expressions must enclose the) Tj T* 0 Tw (expression in parentheses. Beware of similar issues with macros using parameters.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 528.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
.737255 .478431 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL (#define CONSTANT 0x4000) Tj T* (#define CONSTEXP \(CONSTANT | 3\)) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 508.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5\) namespace collisions when defining local variables in macros resembling functions:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 403.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 96 re B*
Q
q
.737255 .478431 0 rg
BT 1 0 0 1 0 74 Tm /F3 10 Tf 12 TL (#define FOO\(x\)                          \\) Tj T* (\({                                      \\) Tj T* (        typeof\(x\) ret;                  \\) Tj T* (        ret = calc_ret\(x\);              \\) Tj T* (        \(ret\);                          \\) Tj T* (}\)) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 383.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ret is a common name for a local variable - __foo_ret is less likely to collide with an existing variable.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 353.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .156235 Tw (The cpp manual deals with macros exhaustively. The gcc internals manual also covers RTL which is used) Tj T* 0 Tw (frequently with assembly language in the kernel.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 320.4236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (13\) Printing kernel messages) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 278.4236 cm
q
BT 1 0 0 1 0 26 Tm 1.031654 Tw 12 TL /F1 10 Tf 0 0 0 rg (Kernel developers like to be seen as literate. Do mind the spelling of kernel messages to make a good) Tj T* 0 Tw 1.303735 Tw (impression. Do not use crippled words like ) Tj /F3 10 Tf 0 0 0 rg (dont) Tj /F1 10 Tf 0 0 0 rg (; use ) Tj /F3 10 Tf 0 0 0 rg (do) Tj ( ) Tj (not) Tj /F1 10 Tf 0 0 0 rg ( or ) Tj /F3 10 Tf 0 0 0 rg (don't) Tj /F1 10 Tf 0 0 0 rg ( instead. Make the messages) Tj T* 0 Tw (concise, clear, and unambiguous.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 260.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Kernel messages do not have to be terminated with a period.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 242.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Printing numbers in parentheses \(%d\) adds no value and should be avoided.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 188.4236 cm
q
BT 1 0 0 1 0 38 Tm .432485 Tw 12 TL /F1 10 Tf 0 0 0 rg (There are a number of driver model diagnostic macros in <) Tj (linux/device.h) Tj (> which you should use to make) Tj T* 0 Tw .602339 Tw (sure messages are matched to the right device and driver, and are tagged with the right level: dev_err\(\),) Tj T* 0 Tw 2.907674 Tw (dev_warn\(\), dev_info\(\), and so forth. For messages that aren't associated with a particular device,) Tj T* 0 Tw (<) Tj (linux/printk.h) Tj (> defines pr_notice\(\), pr_info\(\), pr_warn\(\), pr_err\(\), etc.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 110.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F1 10 Tf 12 TL .501163 Tw (Coming up with good debugging messages can be quite a challenge; and once you have them, they can) Tj T* 0 Tw .92784 Tw (be a huge help for remote troubleshooting. However debug message printing is handled differently than) Tj T* 0 Tw .67816 Tw (printing other non-debug messages. While the other pr_XXX\(\) functions print unconditionally, pr_debug\(\)) Tj T* 0 Tw .203984 Tw (does not; it is compiled out by default, unless either DEBUG is defined or CONFIG_DYNAMIC_DEBUG is) Tj T* 0 Tw .199984 Tw (set. That is true for dev_dbg\(\) also, and a related convention uses VERBOSE_DEBUG to add dev_vdbg\(\)) Tj T* 0 Tw (messages to the ones already enabled by DEBUG.) Tj T* ET
Q
Q
 
endstream
endobj
65 0 obj
<<
/Length 7830
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 729.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.644983 Tw (Many subsystems have Kconfig debug options to turn on -DDEBUG in the corresponding Makefile; in) Tj T* 0 Tw .293555 Tw (other cases specific files #define DEBUG. And when a debug message should be unconditionally printed,) Tj T* 0 Tw (such as if it is already inside a debug-related #ifdef section, printk\(KERN_DEBUG ...\) can be used.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 696.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (14\) Allocating memory) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 654.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 7.254976 Tw (The kernel provides the following general purpose memory allocators: kmalloc\(\), kzalloc\(\),) Tj T* 0 Tw 2.433314 Tw (kmalloc_array\(\), kcalloc\(\), vmalloc\(\), and vzalloc\(\). Please refer to the API documentation for further) Tj T* 0 Tw (information about them.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 636.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The preferred form for passing a size of a struct is the following:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 602.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
.960784 .960784 .862745 rg
n 12 0 6 12 re f*
.960784 .960784 .862745 rg
n 24 0 42 12 re f*
.960784 .960784 .862745 rg
n 66 0 6 12 re f*
.960784 .960784 .862745 rg
n 72 0 36 12 re f*
.960784 .960784 .862745 rg
n 108 0 6 12 re f*
.960784 .960784 .862745 rg
n 114 0 6 12 re f*
.960784 .960784 .862745 rg
n 120 0 6 12 re f*
.960784 .960784 .862745 rg
n 126 0 12 12 re f*
.960784 .960784 .862745 rg
n 144 0 30 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (p) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (kmalloc) Tj 0 0 0 rg (\() Tj /F4 10 Tf 0 .501961 0 rg (sizeof) Tj /F3 10 Tf 0 0 0 rg (\() Tj .4 .4 .4 rg (*) Tj 0 0 0 rg (p) Tj 0 0 0 rg (\),) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (...\);) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 558.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .25811 Tw (The alternative form where struct name is spelled out hurts readability and introduces an opportunity for a) Tj T* 0 Tw .862339 Tw (bug when the pointer variable type is changed but the corresponding sizeof that is passed to a memory) Tj T* 0 Tw (allocator is not.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 528.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.387045 Tw (Casting the return value which is a void pointer is redundant. The conversion from void pointer to any) Tj T* 0 Tw (other pointer type is guaranteed by the C programming language.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 510.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The preferred form for allocating an array is the following:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 477.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
.960784 .960784 .862745 rg
n 12 0 6 12 re f*
.960784 .960784 .862745 rg
n 24 0 78 12 re f*
.960784 .960784 .862745 rg
n 102 0 6 12 re f*
.960784 .960784 .862745 rg
n 108 0 6 12 re f*
.960784 .960784 .862745 rg
n 114 0 6 12 re f*
.960784 .960784 .862745 rg
n 126 0 36 12 re f*
.960784 .960784 .862745 rg
n 162 0 36 12 re f*
.960784 .960784 .862745 rg
n 204 0 30 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (p) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (kmalloc_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg (n) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (sizeof) Tj /F3 10 Tf 0 0 0 rg (\(...\),) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (...\);) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 457.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The preferred form for allocating a zeroed array is the following:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 424.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
.960784 .960784 .862745 rg
n 12 0 6 12 re f*
.960784 .960784 .862745 rg
n 24 0 42 12 re f*
.960784 .960784 .862745 rg
n 66 0 6 12 re f*
.960784 .960784 .862745 rg
n 72 0 6 12 re f*
.960784 .960784 .862745 rg
n 78 0 6 12 re f*
.960784 .960784 .862745 rg
n 90 0 36 12 re f*
.960784 .960784 .862745 rg
n 126 0 36 12 re f*
.960784 .960784 .862745 rg
n 168 0 30 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (p) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (=) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (kcalloc) Tj 0 0 0 rg (\() Tj 0 0 0 rg (n) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj /F4 10 Tf 0 .501961 0 rg (sizeof) Tj /F3 10 Tf 0 0 0 rg (\(...\),) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (...\);) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 404.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Both forms check for overflow on the allocation size n * sizeof\(...\), and return NULL if that occurred.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 371.4236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (15\) The inline disease) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 281.4236 cm
q
BT 1 0 0 1 0 74 Tm 1.307485 Tw 12 TL /F1 10 Tf 0 0 0 rg (There appears to be a common misperception that gcc has a magic "make me faster" speedup option) Tj T* 0 Tw .283516 Tw (called ) Tj /F3 10 Tf 0 0 0 rg (inline) Tj /F1 10 Tf 0 0 0 rg (. While the use of inlines can be appropriate \(for example as a means of replacing macros,) Tj T* 0 Tw .859461 Tw (see Chapter 12\), it very often is not. Abundant use of the inline keyword leads to a much bigger kernel,) Tj T* 0 Tw .456988 Tw (which in turn slows the system as a whole down, due to a bigger icache footprint for the CPU and simply) Tj T* 0 Tw -0.019426 Tw (because there is less memory available for the pagecache. Just think about it; a pagecache miss causes a) Tj T* 0 Tw 1.563145 Tw (disk seek, which easily takes 5 milliseconds. There are a LOT of cpu cycles that can go into these 5) Tj T* 0 Tw (milliseconds.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 227.4236 cm
q
BT 1 0 0 1 0 38 Tm .134989 Tw 12 TL /F1 10 Tf 0 0 0 rg (A reasonable rule of thumb is to not put inline at functions that have more than 3 lines of code in them. An) Tj T* 0 Tw .684724 Tw (exception to this rule are the cases where a parameter is known to be a compiletime constant, and as a) Tj T* 0 Tw .87832 Tw (result of this constantness you ) Tj /F7 10 Tf (know) Tj /F1 10 Tf ( the compiler will be able to optimize most of your function away at) Tj T* 0 Tw (compile time. For a good example of this later case, see the kmalloc\(\) inline function.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 173.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .215251 Tw (Often people argue that adding inline to functions that are static and used only once is always a win since) Tj T* 0 Tw .814985 Tw (there is no space tradeoff. While this is technically correct, gcc is capable of inlining these automatically) Tj T* 0 Tw .977318 Tw (without help, and the maintenance issue of removing the inline when a second user appears outweighs) Tj T* 0 Tw (the potential value of the hint that tells gcc to do something it would have done anyway.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 140.4236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (16\) Function return values and names) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 98.42362 cm
q
BT 1 0 0 1 0 26 Tm 1.092339 Tw 12 TL /F1 10 Tf 0 0 0 rg (Functions can return values of many different kinds, and one of the most common is a value indicating) Tj T* 0 Tw 1.903318 Tw (whether the function succeeded or failed. Such a value can be represented as an error-code integer) Tj T* 0 Tw (\(-Exxx = failure, 0 = success\) or a ) Tj /F3 10 Tf 0 0 0 rg (succeeded) Tj /F1 10 Tf 0 0 0 rg ( boolean \(0 = failure, non-zero = success\).) Tj T* ET
Q
Q
 
endstream
endobj
66 0 obj
<<
/Length 5878
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 729.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .798221 Tw (Mixing up these two sorts of representations is a fertile source of difficult-to-find bugs. If the C language) Tj T* 0 Tw .571412 Tw (included a strong distinction between integers and booleans then the compiler would find these mistakes) Tj T* 0 Tw (for us... but it doesn't. To help prevent such bugs, always follow this convention:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 671.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL (If the name of a function is an action or an imperative command,) Tj T* (the function should return an error-code integer.  If the name) Tj T* (is a predicate, the function should return a "succeeded" boolean.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 627.8236 cm
q
BT 1 0 0 1 0 26 Tm .26528 Tw 12 TL /F1 10 Tf 0 0 0 rg (For example, ) Tj /F3 10 Tf 0 0 0 rg (add) Tj ( ) Tj (work) Tj /F1 10 Tf 0 0 0 rg ( is a command, and the add_work\(\) function returns 0 for success or -EBUSY for) Tj T* 0 Tw 2.06784 Tw (failure. In the same way, ) Tj /F3 10 Tf 0 0 0 rg (PCI) Tj ( ) Tj (device) Tj ( ) Tj (present) Tj /F1 10 Tf 0 0 0 rg ( is a predicate, and the pci_dev_present\(\) function) Tj T* 0 Tw (returns 1 if it succeeds in finding a matching device or 0 if it doesn't.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 597.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .69284 Tw (All EXPORTed functions must respect this convention, and so should all public functions. Private \(static\)) Tj T* 0 Tw (functions need not, but it is recommended that they do.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 543.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .012339 Tw (Functions whose return value is the actual result of a computation, rather than an indication of whether the) Tj T* 0 Tw 1.723555 Tw (computation succeeded, are not subject to this rule. Generally they indicate failure by returning some) Tj T* 0 Tw 2.359269 Tw (out-of-range result. Typical examples would be functions that return pointers; they use NULL or the) Tj T* 0 Tw (ERR_PTR mechanism to report failure.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 510.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (17\) Don't re-invent the kernel macros) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 468.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 2.278555 Tw (The header file include/linux/kernel.h contains a number of macros that you should use, rather than) Tj T* 0 Tw 1.484692 Tw (explicitly coding some variant of them yourself. For example, if you need to calculate the length of an) Tj T* 0 Tw (array, take advantage of the macro) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 423.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
.737255 .478431 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (#define ARRAY_SIZE\(x\) \(sizeof\(x\) / sizeof\(\(x\)[0]\)\)) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 403.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Similarly, if you need to calculate the size of some structure member, use) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 370.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 258 12 re f*
.960784 .960784 .862745 rg
n 258 0 6 12 re f*
.960784 .960784 .862745 rg
n 264 0 18 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf .737255 .478431 0 rg (#define FIELD_SIZEOF\(t, f\) \(sizeof\(\(\(t*\)0\)-) Tj (>) Tj (f\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 338.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .481567 Tw (There are also min\(\) and max\(\) macros that do strict type checking if you need them. Feel free to peruse) Tj T* 0 Tw (that header file to see what else is already defined that you shouldn't reproduce in your code.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 305.4236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (18\) Editor modelines and other cruft) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 275.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.19748 Tw (Some editors can interpret configuration information embedded in source files, indicated with special) Tj T* 0 Tw (markers. For example, emacs interprets lines marked like this:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 242.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 18 12 re f*
.960784 .960784 .862745 rg
n 24 0 24 12 re f*
.960784 .960784 .862745 rg
n 48 0 6 12 re f*
.960784 .960784 .862745 rg
n 60 0 6 12 re f*
.960784 .960784 .862745 rg
n 72 0 18 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf .4 .4 .4 rg (-*-) Tj 0 0 0 rg ( ) Tj .627451 .627451 0 rg (mode) Tj 0 0 0 rg (:) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (c) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (-*-) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 222.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Or like this:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 141.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 72 re B*
Q
q
.25098 .501961 .501961 rg
BT 1 0 0 1 0 50 Tm /F5 10 Tf 12 TL (/*) Tj T* (Local Variables:) Tj T* (compile-command: "gcc -DMAGIC_DEBUG_FLAG foo.c") Tj T* (End:) Tj T* (*/) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 121.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Vim interprets markers that look like this:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 87.82362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
.25098 .501961 .501961 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (/* vim:set sw=8 noet */) Tj T* ET
Q
Q
Q
Q
Q
 
endstream
endobj
67 0 obj
<<
/Length 7552
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 717.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .110574 Tw (Do not include any of these in source files. People have their own personal editor configurations, and your) Tj T* 0 Tw 2.113828 Tw (source files should not override them. This includes markers for indentation and mode configuration.) Tj T* 0 Tw .744985 Tw (People may use their own custom mode, or may have some other magic method for making indentation) Tj T* 0 Tw (work correctly.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 684.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (19\) Inline assembly) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 642.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.907318 Tw (In architecture-specific code, you may need to use inline assembly to interface with CPU or platform) Tj T* 0 Tw 1.648443 Tw (functionality. Don't hesitate to do so when necessary. However, don't use inline assembly gratuitously) Tj T* 0 Tw (when C can do the job. You can and should poke hardware from C when possible.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 612.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .297126 Tw (Consider writing simple helper functions that wrap common bits of inline assembly, rather than repeatedly) Tj T* 0 Tw (writing them with slight variations. Remember that inline assembly can use C parameters.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 582.0236 cm
q
BT 1 0 0 1 0 14 Tm .868651 Tw 12 TL /F1 10 Tf 0 0 0 rg (Large, non-trivial assembly functions should go in .S files, with corresponding C prototypes defined in C) Tj T* 0 Tw (header files. The C prototypes for assembly functions should use ) Tj /F3 10 Tf 0 0 0 rg (asmlinkage) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 540.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .804431 Tw (You may need to mark your asm statement as volatile, to prevent GCC from removing it if GCC doesn't) Tj T* 0 Tw 1.435868 Tw (notice any side effects. You don't always need to do so, though, and doing so unnecessarily can limit) Tj T* 0 Tw (optimization.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 498.0236 cm
q
BT 1 0 0 1 0 26 Tm .256412 Tw 12 TL /F1 10 Tf 0 0 0 rg (When writing a single inline assembly statement containing multiple instructions, put each instruction on a) Tj T* 0 Tw .190542 Tw (separate line in a separate quoted string, and end each string except the last with ) Tj /F3 10 Tf 0 0 0 rg (\\n\\t) Tj /F1 10 Tf 0 0 0 rg ( to properly indent) Tj T* 0 Tw (the next instruction in the assembly output:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 440.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
.960784 .960784 .862745 rg
n 0 24 18 12 re f*
.960784 .960784 .862745 rg
n 24 24 6 12 re f*
.960784 .960784 .862745 rg
n 30 24 102 12 re f*
.960784 .960784 .862745 rg
n 132 24 24 12 re f*
.960784 .960784 .862745 rg
n 156 24 6 12 re f*
.960784 .960784 .862745 rg
n 30 12 150 12 re f*
.960784 .960784 .862745 rg
n 30 0 6 12 re f*
.960784 .960784 .862745 rg
n 42 0 78 12 re f*
.960784 .960784 .862745 rg
n 126 0 6 12 re f*
.960784 .960784 .862745 rg
n 138 0 72 12 re f*
.960784 .960784 .862745 rg
n 216 0 6 12 re f*
.960784 .960784 .862745 rg
n 228 0 84 12 re f*
.960784 .960784 .862745 rg
n 312 0 12 12 re f*
BT 1 0 0 1 0 26 Tm 12 TL /F4 10 Tf 0 .501961 0 rg (asm) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("magic %reg1, #42) Tj /F4 10 Tf .733333 .4 .133333 rg (\\n\\t) Tj /F3 10 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg  T* (     ) Tj .729412 .129412 .129412 rg ("more_magic %reg2, %reg3") Tj 0 0 0 rg  T* (     ) Tj .4 .4 .4 rg (:) Tj 0 0 0 rg ( ) Tj /F5 10 Tf .25098 .501961 .501961 rg (/* outputs */) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .4 .4 .4 rg (:) Tj 0 0 0 rg ( ) Tj /F5 10 Tf .25098 .501961 .501961 rg (/* inputs */) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .4 .4 .4 rg (:) Tj 0 0 0 rg ( ) Tj /F5 10 Tf .25098 .501961 .501961 rg (/* clobbers */) Tj /F3 10 Tf 0 0 0 rg (\);) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 407.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (20\) Conditional Compilation) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 341.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .074651 Tw (Wherever possible, don't use preprocessor conditionals \(#if, #ifdef\) in .c files; doing so makes code harder) Tj T* 0 Tw .165542 Tw (to read and logic harder to follow. Instead, use such conditionals in a header file defining functions for use) Tj T* 0 Tw 3.591235 Tw (in those .c files, providing no-op stub versions in the #else case, and then call those functions) Tj T* 0 Tw 1.647318 Tw (unconditionally from .c files. The compiler will avoid generating any code for the stub calls, producing) Tj T* 0 Tw (identical results, but the logic will remain easy to follow.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 299.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .533984 Tw (Prefer to compile out entire functions, rather than portions of functions or portions of expressions. Rather) Tj T* 0 Tw 2.017765 Tw (than putting an ifdef in an expression, factor out part or all of the expression into a separate helper) Tj T* 0 Tw (function and apply the conditional to that function.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 245.8236 cm
q
BT 1 0 0 1 0 38 Tm .960574 Tw 12 TL /F1 10 Tf 0 0 0 rg (If you have a function or variable which may potentially go unused in a particular configuration, and the) Tj T* 0 Tw -0.103588 Tw (compiler would warn about its definition going unused, mark the definition as __maybe_unused rather than) Tj T* 0 Tw .683318 Tw (wrapping it in a preprocessor conditional. \(However, if a function or variable ) Tj /F7 10 Tf (always) Tj /F1 10 Tf ( goes unused, delete) Tj T* 0 Tw (it.\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 215.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .674985 Tw (Within code, where possible, use the IS_ENABLED macro to convert a Kconfig symbol into a C boolean) Tj T* 0 Tw (expression, and use it in a normal C conditional:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 158.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
.960784 .960784 .862745 rg
n 0 24 12 12 re f*
.960784 .960784 .862745 rg
n 18 24 6 12 re f*
.960784 .960784 .862745 rg
n 24 24 60 12 re f*
.960784 .960784 .862745 rg
n 84 24 6 12 re f*
.960784 .960784 .862745 rg
n 90 24 96 12 re f*
.960784 .960784 .862745 rg
n 186 24 12 12 re f*
.960784 .960784 .862745 rg
n 204 24 6 12 re f*
.960784 .960784 .862745 rg
n 48 12 18 12 re f*
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
BT 1 0 0 1 0 26 Tm 12 TL /F4 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (\() Tj 0 0 0 rg (IS_ENABLED) Tj 0 0 0 rg (\() Tj 0 0 0 rg (CONFIG_SOMETHING) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg ( ) Tj 0 0 0 rg ({) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (...) Tj 0 0 0 rg  T* 0 0 0 rg (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 90.62362 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .341163 Tw (The compiler will constant-fold the conditional away, and include or exclude the block of code just as with) Tj T* 0 Tw .446654 Tw (an #ifdef, so this will not add any runtime overhead. However, this approach still allows the C compiler to) Tj T* 0 Tw .536235 Tw (see the code inside the block, and check it for correctness \(syntax, types, symbol references, etc\). Thus,) Tj T* 0 Tw 1.511988 Tw (you still have to use an #ifdef if the code inside the block references symbols that will not exist if the) Tj T* 0 Tw (condition is not met.) Tj T* ET
Q
Q
 
endstream
endobj
68 0 obj
<<
/Length 2503
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .010465 Tw (At the end of any non-trivial #if or #ifdef block \(more than a few lines\), place a comment after the #endif on) Tj T* 0 Tw (the same line, noting the conditional expression used. For instance:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 683.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
.960784 .960784 .862745 rg
n 0 24 138 12 re f*
.960784 .960784 .862745 rg
n 0 12 18 12 re f*
.960784 .960784 .862745 rg
n 0 0 36 12 re f*
.960784 .960784 .862745 rg
n 42 0 132 12 re f*
.960784 .960784 .862745 rg
n 174 0 0 12 re f*
BT 1 0 0 1 0 26 Tm 12 TL /F3 10 Tf .737255 .478431 0 rg (#ifdef CONFIG_SOMETHING) Tj T* 0 0 0 rg (...) Tj 0 0 0 rg  T* .737255 .478431 0 rg (#endif ) Tj /F5 10 Tf .25098 .501961 .501961 rg (/* CONFIG_SOMETHING */) Tj /F3 10 Tf .737255 .478431 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 650.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Appendix I\) References) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 620.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.009983 Tw (The C Programming Language, Second Edition by Brian W. Kernighan and Dennis M. Ritchie. Prentice) Tj T* 0 Tw (Hall, Inc., 1988. ISBN 0-13-110362-8 \(paperback\), 0-13-110370-9 \(hardback\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 590.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.288555 Tw (The Practice of Programming by Brian W. Kernighan and Rob Pike. Addison-Wesley, Inc., 1999. ISBN) Tj T* 0 Tw (0-201-61586-X.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 560.8236 cm
q
BT 1 0 0 1 0 14 Tm 1.008409 Tw 12 TL /F1 10 Tf 0 0 0 rg (GNU manuals - where in compliance with K) Tj (&) Tj (R and this text - for cpp, gcc, gcc internals and indent, all) Tj T* 0 Tw (available from ) Tj 0 0 .501961 rg (http://www.gnu.org/manual/) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 530.8236 cm
q
BT 1 0 0 1 0 14 Tm 3.86498 Tw 12 TL /F1 10 Tf 0 0 0 rg (WG14 is the international standardization working group for the programming language C, URL:) Tj T* 0 Tw 0 0 .501961 rg (http://www.open-std.org/JTC1/SC22/WG14/) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 500.8236 cm
q
BT 1 0 0 1 0 14 Tm 29.28829 Tw 12 TL /F1 10 Tf 0 0 0 rg (Kernel process/coding-style.rst, by ) Tj 0 0 .501961 rg (greg@kroah.com) Tj 0 0 0 rg ( at OLS 2002:) Tj T* 0 Tw 0 0 .501961 rg (http://www.kroah.com/linux/talks/ols_2002_kernel_codingstyle_talk/html/) Tj T* ET
Q
Q
 
endstream
endobj
69 0 obj
<<
/Nums [ 0 70 0 R 1 71 0 R 2 72 0 R 3 73 0 R 4 74 0 R 
  5 75 0 R 6 76 0 R 7 77 0 R 8 78 0 R 9 79 0 R 
  10 80 0 R 11 81 0 R 12 82 0 R 13 83 0 R 14 84 0 R ]
>>
endobj
70 0 obj
<<
/S /D /St 1
>>
endobj
71 0 obj
<<
/S /D /St 2
>>
endobj
72 0 obj
<<
/S /D /St 3
>>
endobj
73 0 obj
<<
/S /D /St 4
>>
endobj
74 0 obj
<<
/S /D /St 5
>>
endobj
75 0 obj
<<
/S /D /St 6
>>
endobj
76 0 obj
<<
/S /D /St 7
>>
endobj
77 0 obj
<<
/S /D /St 8
>>
endobj
78 0 obj
<<
/S /D /St 9
>>
endobj
79 0 obj
<<
/S /D /St 10
>>
endobj
80 0 obj
<<
/S /D /St 11
>>
endobj
81 0 obj
<<
/S /D /St 12
>>
endobj
82 0 obj
<<
/S /D /St 13
>>
endobj
83 0 obj
<<
/S /D /St 14
>>
endobj
84 0 obj
<<
/S /D /St 15
>>
endobj
xref
0 85
0000000000 65535 f 
0000000073 00000 n 
0000000169 00000 n 
0000000276 00000 n 
0000000388 00000 n 
0000000493 00000 n 
0000000603 00000 n 
0000000716 00000 n 
0000000921 00000 n 
0000001126 00000 n 
0000001331 00000 n 
0000001537 00000 n 
0000001657 00000 n 
0000001863 00000 n 
0000002069 00000 n 
0000002275 00000 n 
0000002391 00000 n 
0000002597 00000 n 
0000002803 00000 n 
0000003009 00000 n 
0000003215 00000 n 
0000003421 00000 n 
0000003627 00000 n 
0000003833 00000 n 
0000004012 00000 n 
0000004204 00000 n 
0000004378 00000 n 
0000004602 00000 n 
0000004848 00000 n 
0000004954 00000 n 
0000005237 00000 n 
0000005312 00000 n 
0000005428 00000 n 
0000005577 00000 n 
0000005759 00000 n 
0000005859 00000 n 
0000005984 00000 n 
0000006111 00000 n 
0000006239 00000 n 
0000006390 00000 n 
0000006519 00000 n 
0000006662 00000 n 
0000006809 00000 n 
0000006944 00000 n 
0000007085 00000 n 
0000007229 00000 n 
0000007366 00000 n 
0000007504 00000 n 
0000007656 00000 n 
0000007809 00000 n 
0000007961 00000 n 
0000008096 00000 n 
0000008239 00000 n 
0000008364 00000 n 
0000008524 00000 n 
0000017642 00000 n 
0000027090 00000 n 
0000035108 00000 n 
0000043981 00000 n 
0000051413 00000 n 
0000058937 00000 n 
0000070598 00000 n 
0000075084 00000 n 
0000079771 00000 n 
0000085662 00000 n 
0000091389 00000 n 
0000099271 00000 n 
0000105201 00000 n 
0000112805 00000 n 
0000115360 00000 n 
0000115538 00000 n 
0000115572 00000 n 
0000115606 00000 n 
0000115640 00000 n 
0000115674 00000 n 
0000115708 00000 n 
0000115742 00000 n 
0000115776 00000 n 
0000115810 00000 n 
0000115844 00000 n 
0000115879 00000 n 
0000115914 00000 n 
0000115949 00000 n 
0000115984 00000 n 
0000116019 00000 n 
trailer
<<
/ID 
[<62b6d23aafd3722176d8ddcd42236c64><62b6d23aafd3722176d8ddcd42236c64>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 29 0 R
/Root 28 0 R
/Size 85
>>
startxref
116054
%%EOF

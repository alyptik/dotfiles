
## Here comes the pain...
escape ^a^a
bind a other
bind A other
bind . focus
bind , focus prev
bind / focus next
bind ; focus top
bind \' focus bottom
bind \" windowlist -m -b
bind = layout next
bind h bindkey -d
bind H hardcopy
bind ^L log
bind t dumptermcap
bind T title
bind - split
bind s split
bind S xoff
bind o only
bind q only
bind Q xon
bind x remove
bind X lockscreen
bind r source "${HOME}/.screenrc"
bind R wrap
bind m mousetrack on
bind M mousetrack off
bind N bumpright
bind P bumpleft

bind '!' number 1
bind '@' number 2
bind '#' number 3
bind '$' number 4
bind '%' number 5
bind '^' number 6
bind '&' number 7
bind '*' number 8
bind '(' number 9
bind ')' number 0

# M-. as escape
bindkey "\033." command

# emacs keybindings for navigation in copy mode
markkeys "0=^a:$=^e:^b=;:^f='"
# make incremental search default
# bindkey -m ? stuff "^r"
# bindkey -m / stuff "^s"
# bindkey -m ^r stuff "?"
# bindkey -m ^s stuff "/"
## defaults
bindkey -m ? stuff "?"
bindkey -m / stuff "/"
bindkey -m ^r stuff "^r"
bindkey -m ^s stuff "^s"
## page up and page down
bindkey -m -k kP stuff \;
bindkey -m -k kN stuff \'
## PgUp | Enter copy/scrollback mode and page up
## PgDown | Enter copy/scrollback mode and page down
#
#bindkey "\033[5~" eval 'copy' 'stuff ^b'
#bindkey "\033[6~" eval 'copy' 'stuff ^f'
## special hack for C-e, since it should go *past*
## the last char. -m means this is for copy mode only.
#
bindkey -m ^e stuff "$^f"
## control arrows move by words. (set B, e, and w to F keys so that i can
## use them to move by words, but they themselves still quit copy mode.)
#
markkeys "B={:E=}:b=[:e=]:w=>:B=<"
#bindkey -m "\033[1;5D" stuff "["
#bindkey -m "\033[1;5C" stuff "]"
bindkey -m "\033[1;5D" stuff "["
bindkey -m "\033[1;5C" stuff "}}["

## M-< and M-> for start/end of buffer
bindkey -m "\033<" stuff "g"
bindkey -m "\033>" stuff "G"
## Easier scrolling
#bindkey "\033[M`[8" eval 'copy' 'stuff ^b'
#bindkey "\033[MaZ8" eval 'copy' 'stuff ^f'

backtick 1 5 5 "$HOME/bin/meminfo"
backtick 2 5 5 "$HOME/bin/load"
backtick 3 5 5 "whoami"
backtick 4 5 5 "date"
backtick 5 5 5 true

## Kill startup message
# bell_msg ""
startup_message off
attrcolor b ".I"
attrcolor i "+b"
rendition so "-b dw"
# sorendition "-b dw"
layout autosave on
# vbell off
vbell on
vbell_msg "üê∂ woof!!! ‚Äî‚Äî‚Äî woof!!! üê∂ "
nethack on
autodetach on
# altscreen off
altscreen on
cjkwidth off
log off
msgminwait 2
msgwait 2
truecolor on
defautonuke off
# defbce on
defbce off
defencoding utf8
defflow auto
# defflow off
deflog off
deflogin on
defmousetrack off
defnonblock on
defobuflimit 2048
defscrollback 1000

## Informs screen that all terminals that begin with ‚Äúxterm‚Äù have firm auto-margins that allow the last
## position on the screen to be updated (LP), but they don't really have a status line (no hs - append @
## to turn entries off). Note that we assume LP for all terminal names that start with ‚Äúvt‚Äù, but onlyi
## if you don't specify a termcap command for that terminal.
# termcapinfo xterm* "LP:hs@"
## Specifies the firm-margined LP capability for all terminals that begin with ‚Äúvt‚Äù, and the second line
## will also add the escape-sequences to switch into (Z0) and back out of (Z1) 132-character-per-line mode
## if this is a VT102 or VT220. (You must specify Z0 and Z1 in your termcap to use the width-changing commands.)
# termcapinfo vt* "LP"
# termcapinfo vt102|vt220 "Z0=\E[?3h:Z1=\E[?3l"
## This leaves your vt100 termcap alone and adds the function key labels to each window"s termcap entry.
# termcapinfo vt100  ""  "l0=PF1:l1=PF2:l2=PF3:l3=PF4"
## Takes a h19 or z19 termcap and turns off auto-margins (am@) and enables the insert mode (im) and end-insert (ei)
## capabilities (the @ in the im string is after the =, so it is part of the string). Having the im and ei
## definitions put into your terminal's termcap will cause screen to automatically advertise the character-insert
## capability in each window's termcap. Each window will also get the delete-character capability (dc) added to
## its termcap, which screen will translate into a line-update for the terminal (we"re pretending it doesn"t support character deletion).
# termcapinfo h19|z19  "am@:im=\E@:ei=\EO" "dc=\E[P"
#
termcapinfo * "Z0=\E[?3h:Z1=\E[?3l"
termcapinfo gnome* "XT"
termcapinfo h19|z19  "am@:im=\E@:ei=\EO" "dc=\E[P"
termcapinfo rxvt* "Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm:ti@:te@:hs:ts=\E]2;:fs=07:ds=\E]2;screen07"
# termcapinfo st* "ti@:te@"
termcapinfo st* "ti@:te@:hs"
# termcapinfo st* "ti@:te@:xn:am:bce:hs:mir:msgr:npc:xenl:vb@:oc@:initc@:smcup=\E[?1049h:rmcup=\E[?1049l"
termcapinfo vt* "xn"
termcapinfo vt100  ""  "l0=PF1:l1=PF2:l2=PF3:l3=PF4"
termcapinfo xterm*|xs "ti@:te@:xn:hs@:Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm"

# term screen-256color-italic
term screen-256color-it
# term screen-256color-bce-it
# term screen-256color-bce-s-it
# term st
# term st-256color
# term xterm-256color
# term xterm-256color-it
# term rxvt-unicode
# term rxvt-unicode-256color

## yes, master is development branch and has improved escape codes
## allowing for 256 and truecolor in hardstatus (though truecolor escapes
## seem broken at the moment, will need to look at it).
##
## Colors are defined as pairs inside brackets separated by semicolon,
## foreground first, background second. You can use '-' or empty field to
## "reset" color to default. Truecolor defines are prefixed by x character.
##
## For example
## hardstatus alwayslastline "%{1;2} red on green %{-;-}"
## hardstatus alwaysfirstline "%{199;77} magenta on light green %{-;-}"
## hardstatus alwayslastline "%{xFF0000;x00FF00} red on green in truecolor %{-;-}"
#
hardstatus on
caption always
hardstatus alwayslastline
windowlist string "%4n %h%=%f"
caption string "%{+b 008;000}%?%E%{+r 008;000}%?%?%P%{+u 008;000}%?:%{= 008;000}%?%E%{+r 008;000}%?%?%P%{+u 008;000}%?:%{+b 008;000}%?%E%{+r 008;000}%?%?%P%{+u 008;000}%?[%{= 002;000}%?%E%{+r 002;000}%?%?%P%{+u 002;000}%? screen.%S %{+b 008;000}%?%E%{+r 008;000}%?%?%P%{+u 008;000}%?]%{= 007;000}%?%E%{+r 007;000}%?%?%P%{+u 007;000}%?%= %?%-Lw%?%{= 009;000}%?%E%{+r 009;000}%?%?%P%{+u 009;000}%?%n*%f %t%?%{= 009;000}%?%E%{+r 009;000}%?%?%P%{+u 009;000}%?(%u)%?%{= 007;000}%?%E%{+r 007;000}%?%?%P%{+u 007;000}%?%?%+Lw%? %=%{+b 008;000}%?%E%{+r 008;000}%?%?%P%{+u 008;000}%?[%{= 002;000}%?%E%{+r 002;000}%?%?%P%{+u 002;000}%? %h %{+b 008;000}%?%E%{+r 008;000}%?%?%P%{+u 008;000}%?]%{-b 008;000}%?%E%{+r 008;000}%?%?%P%{+u 008;000}%?:%{= 008;000}%?%E%{+r 008;000}%?%?%P%{+u 008;000}%?:%5`"
hardstatus string "%{= 100;000}%?%E%{+r 100;000}%?%?%P%{+u 100;000}%?[ %{= 007;000}%?%E%{+r 007;000}%?%?%P%{+u 007;000}%?%3`%{= 009;000}%?%E%{+r 009;000}%?%?%P%{+u 009;000}%?@%{= 007;000}%?%E%{+r 007;000}%?%?%P%{+u 007;000}%?%H%{= 100;000}%?%E%{+r 100;000}%?%?%P%{+u 100;000}%? ][ %{= 003;000}%?%E%{+r 003;000}%?%?%P%{+u 003;000}%?Load%{= 007;000}%?%E%{+r 007;000}%?%?%P%{+u 007;000}%?: %{= 003;000}%?%E%{+r 003;000}%?%?%P%{+u 003;000}%?%2` %{= 100;000}%?%E%{+r 100;000}%?%?%P%{+u 100;000}%?]%=[ %{013;000}%?%E%{+r 013;000}%?%?%P%{+u 013;000}%?%1`%{= 100;000}%?%E%{+r 100;000}%?%?%P%{+u 100;000}%? ][ %{012;000}%?%E%{+r 012;000}%?%?%P%{+u 012;000}%?%4` %{= 100;000}%?%E%{+r 100;000}%?%?%P%{+u 100;000}%?]%5`"
# caption string "%?%E%{=s}%?%{=b kw}%?%E%{+s}%?:%{-b kw}:%{+b kk}[%{-b kg} screen.%S %{+b kk}]%{= kw}%=%?%-Lw%?%{= kR}%n*%f %t%?%{= kR}(%u)%?%{= kw}%?%+Lw%?%= %?%E%{=s}%?%{+b kk}[%{-b kg} %h %{+b kk}]%{-b kw}:%{+b kw}:"
# hardstatus string "%{= kG}[%{-b kg} %{R}%2`%{+b kk}@%{-b kc}%H%{-b kg} ][ %{-b ky}Load%{+b kk}: %{-b ky}%l %{g}]%=[ %{-b kM}%1` %{g}][%{B} %Y-%m-%d %{R}%D %{W}%0C:%s%a %{g}]"

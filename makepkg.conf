#
# /etc/makepkg.conf
#

#########################################################################
# SOURCE ACQUISITION
#########################################################################
#
#-- The download utilities that makepkg should use to acquire sources
#  Format: 'protocol::agent'
DLAGENTS=('ftp::/usr/bin/curl -fC - --ftp-pasv --retry 3 --retry-delay 3 -o %o %u'
          'http::/usr/bin/curl -fLC - --retry 3 --retry-delay 3 -o %o %u'
          'https::/usr/bin/curl -fLC - --retry 3 --retry-delay 3 -o %o %u'
          'rsync::/usr/bin/rsync --no-motd -z %u %o'
          'scp::/usr/bin/scp -C %u %o')

# Other common tools:
# /usr/bin/snarf
# /usr/bin/lftpget -c
# /usr/bin/wget

#-- The package required by makepkg to download VCS sources
#  Format: 'protocol::package'
VCSCLIENTS=('bzr::bzr'
            'git::git'
            'hg::mercurial'
            'svn::subversion')

#########################################################################
# ARCHITECTURE, COMPILE FLAGS
#########################################################################
#
CARCH="x86_64"
# CHOST="x86_64-pc-linux-gnu"
CHOST="x86_64-unknown-linux-gnu"

#-- Compiler and Linker Flags
# -march (or -mcpu) builds exclusively for an architecture
# -mtune optimizes for an architecture, but builds for whole processor family
#
# CPPFLAGS="-D_FORTIFY_SOURCE=2"
# CPPFLAGS="-D_FORTIFY_SOURCE=2"

# CFLAGS="-flto -fno-plt -fPIC -fstack-protector-strong -march=native -O2 -pipe"
# CFLAGS+=" -march=native"
# CFLAGS+=" -fstack-protector-strong"
CFLAGS+=" -march=x86-64 -mtune=intel -g3 -O3"
CFLAGS+=" -fno-plt -fno-strict-aliasing -fPIC"
CFLAGS+=" -fuse-linker-plugin -fuse-ld=gold"

# LDFLAGS="-flto -fPIC -fstack-protector-strong -fuse-linker-plugin -fuse-ld=gold -Wl,-O2,-zrelro,-znow,--sort-common,--as-needed"
# LDFLAGS="-O2 -pipe"
# LDFLAGS+=" -march=native"
# LDFLAGS+=" -flto -fno-plt -fPIC"
# LDFLAGS+=" -fstack-protector-strong"
# LDFLAGS+=" -fuse-linker-plugin -fuse-ld=gold"
LDFLAGS="$CFLAGS"
LDFLAG+=" -Wl,-O3,-z,relro,-z,now,-z,noexecstack"
LDFLAGS+=" -Wl,--as-needed,--sort-common,--warn-common"

CXXFLAGS="$CFLAGS"

# CFLAGS="-march=native -O2 -pipe -fstack-protector-strong"
# CFLAGS="-march=native -O2 -pipe -flto -fno-plt -fPIC -fstack-protector-strong -fuse-linker-plugin -fuse-ld=gold -std=c11 -Wall -Wextra -Wimplicit-fallthrough=1 -pedantic-errors"
# CFLAGS="-march=native -O2 -pipe -fPIC -fstack-protector-strong"
# CFLAGS="-march=x86-64 -mtune=intel -O2 -pipe -fstack-protector-strong"
# CFLAGS="-march=haswell -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp -mfma -mno-fma4 -mno-xop -mbmi -mbmi2 -mno-tbm -mavx -mavx2 -msse4.2 -msse4.1 -mlzcnt -mno-rtm -mno-hle -mrdrnd -mf16c -mfsgsbase -mno-rdseed -mno-prfchw -mno-adx -mfxsr -mxsave -mxsaveopt -mno-avx512f -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mno-clflushopt -mno-xsavec -mno-xsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl -mno-avx512ifma -mno-avx512vbmi -mno-clwb -mno-pcommit -mno-mwaitx -mno-clzero -mno-pku --param l1-cache-size=32 --param l1-cache-line-size=64 --param l2-cache-size=3072 -O2 -pipe"

# CXXFLAGS="-march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong"

# LDFLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro"
# LDFLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro -Wl,-z,now"
# LDFLAGS="-fPIC -fstack-protector-strong -Wl,-O1,-zrelro,-znow,-pie,--sort-common,--as-needed"
# LDFLAGS="-flto -fuse-linker-plugin -fuse-ld=gold -Wl,-O2,-zrelro,-znow,--sort-common,--as-needed"

#-- Make Flags: change this for DistCC/SMP systems
#MAKEFLAGS="-j3"
#MAKEFLAGS="-j5"

#-- Debugging flags
DEBUG_CFLAGS="-O0 -ggdb3 -no-pie -Wfloat-equal -Wrestrict -Wshadow -fsanitize=address,alignment,leak,undefined"
DEBUG_CXXFLAGS="$DEBUG_CFLAGS"
DEBUG_LDFLAGS="$DEBUG_CFLAGS"
# DEBUG_LDFLAGS="$DEBUG_CFLAGS $DEBUG_LDFLAGS"
# DEBUG_CXXFLAGS="-g -fvar-tracking-assignments"

#########################################################################
# BUILD ENVIRONMENT
#########################################################################
#
# Defaults: BUILDENV=(!distcc color !ccache check !sign)
#  A negated environment option will do the opposite of the comments below.
#
#-- distcc:   Use the Distributed C/C++/ObjC compiler
#-- color:    Colorize output messages
#-- ccache:   Use ccache to cache compilation
#-- check:    Run the check() function if present in the PKGBUILD
#-- sign:     Generate PGP signature file
#
#BUILDENV=(distcc color !ccache check !sign)
BUILDENV=(!distcc fakeroot color !ccache check !sign !optipng)
#-- If using DistCC, your MAKEFLAGS will also need modification. In addition,
#-- specify a space-delimited list of hosts running in the DistCC cluster.
# MAKEFLAGS="-j17 -l5"
# MAKEFLAGS="-j -l5"
MAKEFLAGS="-j4"

#-- If using DistCC, your MAKEFLAGS will also need modification. In addition,
#-- specify a space-delimited list of hosts running in the DistCC cluster.
#DISTCC_HOSTS=""
# DISTCC_HOSTS="192.168.1.94/5 192.168.1.99/5 127.0.0.1/5"
DISTCC_HOSTS="192.168.1.99/4"
# DISTCC_HOSTS="127.0.0.1/4 192.168.1.99/4"
#
#-- Specify a directory for package building.
#BUILDDIR=/tmp/makepkg

#########################################################################
# GLOBAL PACKAGE OPTIONS
#   These are default values for the options=() settings
#########################################################################
#
# Default: OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge !optipng !upx !debug)
#  A negated option will do the opposite of the comments below.
#
#-- strip:      Strip symbols from binaries/libraries
#-- docs:       Save doc directories specified by DOC_DIRS
#-- libtool:    Leave libtool (.la) files in packages
#-- staticlibs: Leave static library (.a) files in packages
#-- emptydirs:  Leave empty directories in packages
#-- zipman:     Compress manual (man and info) pages in MAN_DIRS with gzip
#-- purge:      Remove files specified by PURGE_TARGETS
#-- upx:        Compress binary executable files using UPX
#-- optipng:    Optimize PNG images with optipng
#-- debug:      Add debugging flags as specified in DEBUG_* variables
#
OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge optipng !upx !debug)

#-- File integrity checks to use. Valid: md5, sha1, sha256, sha384, sha512
INTEGRITY_CHECK=(md5)
#-- Options to be used when stripping binaries. See `man strip' for details.
STRIP_BINARIES="--strip-all"
#-- Options to be used when stripping shared libraries. See `man strip' for details.
STRIP_SHARED="--strip-unneeded"
#-- Options to be used when stripping static libraries. See `man strip' for details.
STRIP_STATIC="--strip-debug"
#-- Manual (man and info) directories to compress (if zipman is specified)
MAN_DIRS=({usr{,/local}{,/share},opt/*}/{man,info})
#-- Doc directories to remove (if !docs is specified)
DOC_DIRS=(usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc})
#-- Files to be removed from all packages (if purge is specified)
PURGE_TARGETS=(usr/{,share}/info/dir .packlist *.pod)

#########################################################################
# PACKAGE OUTPUT
#########################################################################
#
# Default: put built package and cached source in build directory
#
#-- Destination: specify a fixed directory where all packages will be placed
#PKGDEST=/home/packages
#-- Source cache: specify a fixed directory where source files will be cached
#SRCDEST=/home/sources
#-- Source packages: specify a fixed directory where all src packages will be placed
#SRCPKGDEST=/home/srcpackages
#-- Log files: specify a fixed directory where all log files will be placed
#LOGDEST=/home/makepkglogs
#-- Packager: name/email of the person or organization building packages
#PACKAGER="John Doe <john@doe.com>"
#-- Specify a key to use for package signing
#GPGKEY=""

#########################################################################
# COMPRESSION DEFAULTS
#########################################################################
#
COMPRESSGZ=(gzip -c -f -n)
COMPRESSBZ2=(bzip2 -c -f)
COMPRESSXZ=(xz -c -z - --threads=0)
COMPRESSLRZ=(lrzip -q)
COMPRESSLZO=(lzop -q)
COMPRESSZ=(compress -c -f)

#########################################################################
# EXTENSION DEFAULTS
#########################################################################
#
# WARNING: Do NOT modify these variables unless you know what you are
#          doing.
#
PKGEXT='.pkg.tar.xz'
SRCEXT='.src.tar.gz'

# vi:filetype=sh ts=2 sw=2:

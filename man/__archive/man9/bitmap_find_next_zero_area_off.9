'\" t
.\"     Title: bitmap_find_next_zero_area_off
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: January 2017
.\"    Manual: Basic Kernel Library Functions
.\"    Source: Kernel Hackers Manual 4.10.0-rc1
.\"  Language: English
.\"
.TH "BITMAP_FIND_NEXT_ZER" "9" "January 2017" "Kernel Hackers Manual 4\&.10\&" "Basic Kernel Library Functions"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
bitmap_find_next_zero_area_off \- find a contiguous aligned zero area
.SH "SYNOPSIS"
.HP \w'unsigned\ long\ bitmap_find_next_zero_area_off('u
.BI "unsigned long bitmap_find_next_zero_area_off(unsigned\ long\ *\ " "map" ", unsigned\ long\ " "size" ", unsigned\ long\ " "start" ", unsigned\ int\ " "nr" ", unsigned\ long\ " "align_mask" ", unsigned\ long\ " "align_offset" ");"
.SH "ARGUMENTS"
.PP
\fImap\fR
.RS 4
The address to base the search on
.RE
.PP
\fIsize\fR
.RS 4
The bitmap size in bits
.RE
.PP
\fIstart\fR
.RS 4
The bitnumber to start searching at
.RE
.PP
\fInr\fR
.RS 4
The number of zeroed bits we\*(Aqre looking for
.RE
.PP
\fIalign_mask\fR
.RS 4
Alignment mask for zero area
.RE
.PP
\fIalign_offset\fR
.RS 4
Alignment offset for zero area\&.
.RE
.SH "DESCRIPTION"
.PP
The
\fIalign_mask\fR
should be one less than a power of 2; the effect is that the bit offset of all zero areas this function finds plus
\fIalign_offset\fR
is multiple of that power of 2\&.
.SH "COPYRIGHT"
.br

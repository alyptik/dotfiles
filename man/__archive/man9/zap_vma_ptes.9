'\" t
.\"     Title: zap_vma_ptes
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: January 2017
.\"    Manual: Memory Management in Linux
.\"    Source: Kernel Hackers Manual 4.10.0-rc1
.\"  Language: English
.\"
.TH "ZAP_VMA_PTES" "9" "January 2017" "Kernel Hackers Manual 4\&.10\&" "Memory Management in Linux"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
zap_vma_ptes \- remove ptes mapping the vma
.SH "SYNOPSIS"
.HP \w'int\ zap_vma_ptes('u
.BI "int zap_vma_ptes(struct\ vm_area_struct\ *\ " "vma" ", unsigned\ long\ " "address" ", unsigned\ long\ " "size" ");"
.SH "ARGUMENTS"
.PP
\fIvma\fR
.RS 4
vm_area_struct holding ptes to be zapped
.RE
.PP
\fIaddress\fR
.RS 4
starting address of pages to zap
.RE
.PP
\fIsize\fR
.RS 4
number of bytes to zap
.RE
.SH "DESCRIPTION"
.PP
This function only unmaps ptes assigned to VM_PFNMAP vmas\&.
.PP
The entire address range must be fully contained within the vma\&.
.PP
Returns 0 if successful\&.
.SH "COPYRIGHT"
.br

'\" t
.\"     Title: rio_match_device
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: January 2017
.\"    Manual: Internals
.\"    Source: Kernel Hackers Manual 4.10.0-rc1
.\"  Language: English
.\"
.TH "RIO_MATCH_DEVICE" "9" "January 2017" "Kernel Hackers Manual 4\&.10\&" "Internals"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
rio_match_device \- Tell if a RIO device has a matching RIO device id structure
.SH "SYNOPSIS"
.HP \w'const\ struct\ rio_device_id\ *\ rio_match_device('u
.BI "const struct rio_device_id * rio_match_device(const\ struct\ rio_device_id\ *\ " "id" ", const\ struct\ rio_dev\ *\ " "rdev" ");"
.SH "ARGUMENTS"
.PP
\fIid\fR
.RS 4
the RIO device id structure to match against
.RE
.PP
\fIrdev\fR
.RS 4
the RIO device structure to match against
.RE
.SH "DESCRIPTION"
.PP
Used from driver probe and bus matching to check whether a RIO device matches a device id structure provided by a RIO driver\&. Returns the matching
struct rio_device_id
or
\fBNULL\fR
if there is no match\&.
.SH "AUTHOR"
.PP
\fBMatt Porter\fR <\&mporter@kernel.crashing.org\&>, <\&mporter@mvista.com\&>
.RS 4
Author.
.RE
.SH "COPYRIGHT"
.br

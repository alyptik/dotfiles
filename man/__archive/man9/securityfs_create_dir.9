'\" t
.\"     Title: securityfs_create_dir
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: January 2017
.\"    Manual: Security Framework
.\"    Source: Kernel Hackers Manual 4.10.0-rc1
.\"  Language: English
.\"
.TH "SECURITYFS_CREATE_DI" "9" "January 2017" "Kernel Hackers Manual 4\&.10\&" "Security Framework"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
securityfs_create_dir \- create a directory in the securityfs filesystem
.SH "SYNOPSIS"
.HP \w'struct\ dentry\ *\ securityfs_create_dir('u
.BI "struct dentry * securityfs_create_dir(const\ char\ *\ " "name" ", struct\ dentry\ *\ " "parent" ");"
.SH "ARGUMENTS"
.PP
\fIname\fR
.RS 4
a pointer to a string containing the name of the directory to create\&.
.RE
.PP
\fIparent\fR
.RS 4
a pointer to the parent dentry for this file\&. This should be a directory dentry if set\&. If this parameter is
\fBNULL\fR, then the directory will be created in the root of the securityfs filesystem\&.
.RE
.SH "DESCRIPTION"
.PP
This function creates a directory in securityfs with the given
\fIname\fR\&.
.PP
This function returns a pointer to a dentry if it succeeds\&. This pointer must be passed to the
\fBsecurityfs_remove\fR
function when the file is to be removed (no automatic cleanup happens if your module is unloaded, you are responsible here)\&. If an error occurs, the function will return the error value (via ERR_PTR)\&.
.PP
If securityfs is not enabled in the kernel, the value
\fB\-ENODEV\fR
is returned\&.
.SH "COPYRIGHT"
.br

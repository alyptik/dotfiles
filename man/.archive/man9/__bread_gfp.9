'\" t
.\"     Title: __bread_gfp
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: January 2017
.\"    Manual: The Linux VFS
.\"    Source: Kernel Hackers Manual 4.10.0-rc1
.\"  Language: English
.\"
.TH "__BREAD_GFP" "9" "January 2017" "Kernel Hackers Manual 4\&.10\&" "The Linux VFS"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
__bread_gfp \- reads a specified block and returns the bh
.SH "SYNOPSIS"
.HP \w'struct\ buffer_head\ *\ __bread_gfp('u
.BI "struct buffer_head * __bread_gfp(struct\ block_device\ *\ " "bdev" ", sector_t\ " "block" ", unsigned\ " "size" ", gfp_t\ " "gfp" ");"
.SH "ARGUMENTS"
.PP
\fIbdev\fR
.RS 4
the block_device to read from
.RE
.PP
\fIblock\fR
.RS 4
number of block
.RE
.PP
\fIsize\fR
.RS 4
size (in bytes) to read
.RE
.PP
\fIgfp\fR
.RS 4
page allocation flag
.RE
.SH "DESCRIPTION"
.PP
Reads a specified block, and returns buffer head that contains it\&. The page cache can be allocated from non\-movable area not to prevent page migration if you set gfp to zero\&. It returns NULL if the block was unreadable\&.
.SH "COPYRIGHT"
.br

'\" t
.\"     Title: __audit_syscall_exit
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: January 2017
.\"    Manual: Audit Interfaces
.\"    Source: Kernel Hackers Manual 4.10.0-rc1
.\"  Language: English
.\"
.TH "__AUDIT_SYSCALL_EXIT" "9" "January 2017" "Kernel Hackers Manual 4\&.10\&" "Audit Interfaces"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
__audit_syscall_exit \- deallocate audit context after a system call
.SH "SYNOPSIS"
.HP \w'void\ __audit_syscall_exit('u
.BI "void __audit_syscall_exit(int\ " "success" ", long\ " "return_code" ");"
.SH "ARGUMENTS"
.PP
\fIsuccess\fR
.RS 4
success value of the syscall
.RE
.PP
\fIreturn_code\fR
.RS 4
return value of the syscall
.RE
.SH "DESCRIPTION"
.PP
Tear down after system call\&. If the audit context has been marked as auditable (either because of the AUDIT_RECORD_CONTEXT state from filtering, or because some other part of the kernel wrote an audit message), then write out the syscall information\&. In call cases, free the names stored from
\fBgetname\fR\&.
.SH "COPYRIGHT"
.br

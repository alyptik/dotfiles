'\" t
.\"     Title: truncate_inode_pages
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: January 2017
.\"    Manual: Memory Management in Linux
.\"    Source: Kernel Hackers Manual 4.10.0-rc1
.\"  Language: English
.\"
.TH "TRUNCATE_INODE_PAGES" "9" "January 2017" "Kernel Hackers Manual 4\&.10\&" "Memory Management in Linux"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
truncate_inode_pages \- truncate *all* the pages from an offset
.SH "SYNOPSIS"
.HP \w'void\ truncate_inode_pages('u
.BI "void truncate_inode_pages(struct\ address_space\ *\ " "mapping" ", loff_t\ " "lstart" ");"
.SH "ARGUMENTS"
.PP
\fImapping\fR
.RS 4
mapping to truncate
.RE
.PP
\fIlstart\fR
.RS 4
offset from which to truncate
.RE
.SH "DESCRIPTION"
.PP
Called under (and serialised by) inode\->i_mutex\&.
.SH "NOTE"
.PP
When this function returns, there can be a page in the process of deletion (inside
\fB__delete_from_page_cache\fR) in the specified range\&. Thus mapping\->nrpages can be non\-zero when this function returns even after truncation of the whole mapping\&.
.SH "COPYRIGHT"
.br

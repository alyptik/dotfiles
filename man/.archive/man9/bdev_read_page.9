'\" t
.\"     Title: bdev_read_page
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: January 2017
.\"    Manual: The Linux VFS
.\"    Source: Kernel Hackers Manual 4.10.0-rc1
.\"  Language: English
.\"
.TH "BDEV_READ_PAGE" "9" "January 2017" "Kernel Hackers Manual 4\&.10\&" "The Linux VFS"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
bdev_read_page \- Start reading a page from a block device
.SH "SYNOPSIS"
.HP \w'int\ bdev_read_page('u
.BI "int bdev_read_page(struct\ block_device\ *\ " "bdev" ", sector_t\ " "sector" ", struct\ page\ *\ " "page" ");"
.SH "ARGUMENTS"
.PP
\fIbdev\fR
.RS 4
The device to read the page from
.RE
.PP
\fIsector\fR
.RS 4
The offset on the device to read the page to (need not be aligned)
.RE
.PP
\fIpage\fR
.RS 4
The page to read
.RE
.SH "DESCRIPTION"
.PP
On entry, the page should be locked\&. It will be unlocked when the page has been read\&. If the block driver implements rw_page synchronously, that will be true on exit from this function, but it need not be\&.
.PP
Errors returned by this function are usually
\(lqsoft\(rq, eg out of memory, or queue full; callers should try a different route to read this page rather than propagate an error back up the stack\&.
.SH "RETURN"
.PP
negative errno if an error occurs, 0 if submission was successful\&.
.SH "COPYRIGHT"
.br

'\" t
.\"     Title: bitmap_from_u32array
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: January 2017
.\"    Manual: Basic Kernel Library Functions
.\"    Source: Kernel Hackers Manual 4.10.0-rc1
.\"  Language: English
.\"
.TH "BITMAP_FROM_U32ARRAY" "9" "January 2017" "Kernel Hackers Manual 4\&.10\&" "Basic Kernel Library Functions"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
bitmap_from_u32array \- copy the contents of a u32 array of bits to bitmap
.SH "SYNOPSIS"
.HP \w'unsigned\ int\ bitmap_from_u32array('u
.BI "unsigned int bitmap_from_u32array(unsigned\ long\ *\ " "bitmap" ", unsigned\ int\ " "nbits" ", const\ u32\ *\ " "buf" ", unsigned\ int\ " "nwords" ");"
.SH "ARGUMENTS"
.PP
\fIbitmap\fR
.RS 4
array of unsigned longs, the destination bitmap, non NULL
.RE
.PP
\fInbits\fR
.RS 4
number of bits in
\fIbitmap\fR
.RE
.PP
\fIbuf\fR
.RS 4
array of u32 (in host byte order), the source bitmap, non NULL
.RE
.PP
\fInwords\fR
.RS 4
number of u32 words in
\fIbuf\fR
.RE
.SH "DESCRIPTION"
.PP
copy min(nbits, 32*nwords) bits from
\fIbuf\fR
to
\fIbitmap\fR, remaining bits between nword and nbits in
\fIbitmap\fR
(if any) are cleared\&. In last word of
\fIbitmap\fR, the bits beyond nbits (if any) are kept unchanged\&.
.PP
Return the number of bits effectively copied\&.
.SH "COPYRIGHT"
.br

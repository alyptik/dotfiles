'\" t
.\"     Title: __pskb_copy_fclone
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: January 2017
.\"    Manual: Linux Networking
.\"    Source: Kernel Hackers Manual 4.10.0-rc1
.\"  Language: English
.\"
.TH "__PSKB_COPY_FCLONE" "9" "January 2017" "Kernel Hackers Manual 4\&.10\&" "Linux Networking"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
__pskb_copy_fclone \- create copy of an sk_buff with private head\&.
.SH "SYNOPSIS"
.HP \w'struct\ sk_buff\ *\ __pskb_copy_fclone('u
.BI "struct sk_buff * __pskb_copy_fclone(struct\ sk_buff\ *\ " "skb" ", int\ " "headroom" ", gfp_t\ " "gfp_mask" ", bool\ " "fclone" ");"
.SH "ARGUMENTS"
.PP
\fIskb\fR
.RS 4
buffer to copy
.RE
.PP
\fIheadroom\fR
.RS 4
headroom of new skb
.RE
.PP
\fIgfp_mask\fR
.RS 4
allocation priority
.RE
.PP
\fIfclone\fR
.RS 4
if true allocate the copy of the skb from the fclone cache instead of the head cache; it is recommended to set this to true for the cases where the copy will likely be cloned
.RE
.SH "DESCRIPTION"
.PP
Make a copy of both an
sk_buff
and part of its data, located in header\&. Fragmented data remain shared\&. This is used when the caller wishes to modify only header of
sk_buff
and needs private copy of the header to alter\&. Returns
\fBNULL\fR
on failure or the pointer to the buffer on success\&. The returned buffer has a reference count of 1\&.
.SH "COPYRIGHT"
.br

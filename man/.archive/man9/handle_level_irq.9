'\" t
.\"     Title: handle_level_irq
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: January 2017
.\"    Manual: Public Functions Provided
.\"    Source: Kernel Hackers Manual 4.10.0-rc1
.\"  Language: English
.\"
.TH "HANDLE_LEVEL_IRQ" "9" "January 2017" "Kernel Hackers Manual 4\&.10\&" "Public Functions Provided"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
handle_level_irq \- Level type irq handler
.SH "SYNOPSIS"
.HP \w'void\ handle_level_irq('u
.BI "void handle_level_irq(struct\ irq_desc\ *\ " "desc" ");"
.SH "ARGUMENTS"
.PP
\fIdesc\fR
.RS 4
the interrupt description structure for this irq
.RE
.SH "DESCRIPTION"
.PP
Level type interrupts are active as long as the hardware line has the active level\&. This may require to mask the interrupt and unmask it after the associated handler has acknowledged the device, so the interrupt line is back to inactive\&.
.SH "AUTHORS"
.PP
\fBThomas Gleixner\fR <\&tglx@linutronix.de\&>
.RS 4
Author.
.RE
.PP
\fBIngo Molnar\fR <\&mingo@elte.hu\&>
.RS 4
Author.
.RE
.SH "COPYRIGHT"
.br

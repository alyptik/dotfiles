'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _helpers = require('./helpers');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var CompositeDisposable = function () {
  function CompositeDisposable() {
    _classCallCheck(this, CompositeDisposable);

    for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
      params[_key] = arguments[_key];
    }

    (0, _helpers.validate)(params);

    this.disposed = false;
    this.disposables = new Set(params);
  }

  _createClass(CompositeDisposable, [{
    key: 'add',
    value: function add() {
      if (this.disposed) {
        return;
      }

      for (var _len2 = arguments.length, params = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        params[_key2] = arguments[_key2];
      }

      (0, _helpers.validate)(params);
      for (var i = 0, length = params.length; i < length; ++i) {
        this.disposables.add(params[i]);
      }
    }
  }, {
    key: 'delete',
    value: function _delete() {
      if (this.disposed) {
        return;
      }

      for (var _len3 = arguments.length, params = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        params[_key3] = arguments[_key3];
      }

      for (var i = 0, length = params.length; i < length; ++i) {
        this.disposables.delete(params[i]);
      }
    }
  }, {
    key: 'clear',
    value: function clear() {
      if (this.disposed) {
        return;
      }
      this.disposables.clear();
    }
  }, {
    key: 'dispose',
    value: function dispose() {
      if (this.disposed) {
        return;
      }
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.disposables[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var item = _step.value;

          if (typeof item.dispose === 'function') {
            item.dispose();
          } else if (typeof item === 'function') {
            item();
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      this.disposed = true;
      this.disposables.clear();
    }
  }]);

  return CompositeDisposable;
}();

exports.default = CompositeDisposable;